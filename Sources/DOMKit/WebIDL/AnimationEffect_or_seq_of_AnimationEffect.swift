// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_AnimationEffect_or_seq_of_AnimationEffect: ConvertibleToJSValue {}
extension AnimationEffect: Any_AnimationEffect_or_seq_of_AnimationEffect {}
extension Array: Any_AnimationEffect_or_seq_of_AnimationEffect where Element == AnimationEffect {}

public enum AnimationEffect_or_seq_of_AnimationEffect: JSValueCompatible, Any_AnimationEffect_or_seq_of_AnimationEffect {
    case animationEffect(AnimationEffect)
    case seq_of_AnimationEffect([AnimationEffect])

    public static func construct(from value: JSValue) -> Self? {
        if let animationEffect: AnimationEffect = value.fromJSValue() {
            return .animationEffect(animationEffect)
        }
        if let seq_of_AnimationEffect: [AnimationEffect] = value.fromJSValue() {
            return .seq_of_AnimationEffect(seq_of_AnimationEffect)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .animationEffect(animationEffect):
            return animationEffect.jsValue
        case let .seq_of_AnimationEffect(seq_of_AnimationEffect):
            return seq_of_AnimationEffect.jsValue
        }
    }
}
