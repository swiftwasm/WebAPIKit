// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class InputEvent: UIEvent {
    override public class var constructor: JSFunction { JSObject.global.InputEvent.function! }

    private enum Keys {
        static let data: JSString = "data"
        static let isComposing: JSString = "isComposing"
        static let inputType: JSString = "inputType"
    }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _data = ReadonlyAttribute(jsObject: jsObject, name: Keys.data)
        _isComposing = ReadonlyAttribute(jsObject: jsObject, name: Keys.isComposing)
        _inputType = ReadonlyAttribute(jsObject: jsObject, name: Keys.inputType)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(type: String, eventInitDict: InputEventInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(type.jsValue(), eventInitDict?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var data: String?

    @ReadonlyAttribute
    public var isComposing: Bool

    @ReadonlyAttribute
    public var inputType: String
}
