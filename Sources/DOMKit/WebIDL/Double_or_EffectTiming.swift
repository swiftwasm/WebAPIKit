// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_Double_or_EffectTiming: ConvertibleToJSValue {}
extension Double: Any_Double_or_EffectTiming {}
extension EffectTiming: Any_Double_or_EffectTiming {}

public enum Double_or_EffectTiming: JSValueCompatible, Any_Double_or_EffectTiming {
    case double(Double)
    case effectTiming(EffectTiming)

    public static func construct(from value: JSValue) -> Self? {
        if let double: Double = value.fromJSValue() {
            return .double(double)
        }
        if let effectTiming: EffectTiming = value.fromJSValue() {
            return .effectTiming(effectTiming)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .double(double):
            return double.jsValue()
        case let .effectTiming(effectTiming):
            return effectTiming.jsValue()
        }
    }
}
