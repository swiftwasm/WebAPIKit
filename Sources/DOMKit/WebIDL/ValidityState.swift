// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class ValidityState: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.ValidityState.function! }

    private enum Keys {
        static let badInput: JSString = "badInput"
        static let customError: JSString = "customError"
        static let patternMismatch: JSString = "patternMismatch"
        static let rangeOverflow: JSString = "rangeOverflow"
        static let rangeUnderflow: JSString = "rangeUnderflow"
        static let stepMismatch: JSString = "stepMismatch"
        static let tooLong: JSString = "tooLong"
        static let tooShort: JSString = "tooShort"
        static let typeMismatch: JSString = "typeMismatch"
        static let valid: JSString = "valid"
        static let valueMissing: JSString = "valueMissing"
    }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _valueMissing = ReadonlyAttribute(jsObject: jsObject, name: Keys.valueMissing)
        _typeMismatch = ReadonlyAttribute(jsObject: jsObject, name: Keys.typeMismatch)
        _patternMismatch = ReadonlyAttribute(jsObject: jsObject, name: Keys.patternMismatch)
        _tooLong = ReadonlyAttribute(jsObject: jsObject, name: Keys.tooLong)
        _tooShort = ReadonlyAttribute(jsObject: jsObject, name: Keys.tooShort)
        _rangeUnderflow = ReadonlyAttribute(jsObject: jsObject, name: Keys.rangeUnderflow)
        _rangeOverflow = ReadonlyAttribute(jsObject: jsObject, name: Keys.rangeOverflow)
        _stepMismatch = ReadonlyAttribute(jsObject: jsObject, name: Keys.stepMismatch)
        _badInput = ReadonlyAttribute(jsObject: jsObject, name: Keys.badInput)
        _customError = ReadonlyAttribute(jsObject: jsObject, name: Keys.customError)
        _valid = ReadonlyAttribute(jsObject: jsObject, name: Keys.valid)
        self.jsObject = jsObject
    }

    @ReadonlyAttribute
    public var valueMissing: Bool

    @ReadonlyAttribute
    public var typeMismatch: Bool

    @ReadonlyAttribute
    public var patternMismatch: Bool

    @ReadonlyAttribute
    public var tooLong: Bool

    @ReadonlyAttribute
    public var tooShort: Bool

    @ReadonlyAttribute
    public var rangeUnderflow: Bool

    @ReadonlyAttribute
    public var rangeOverflow: Bool

    @ReadonlyAttribute
    public var stepMismatch: Bool

    @ReadonlyAttribute
    public var badInput: Bool

    @ReadonlyAttribute
    public var customError: Bool

    @ReadonlyAttribute
    public var valid: Bool
}
