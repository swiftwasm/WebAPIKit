// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol CanvasDrawPath: JSBridgedClass {}
public extension CanvasDrawPath {
    func beginPath() {
        _ = jsObject[Strings.beginPath]!()
    }

    func fill(fillRule: CanvasFillRule? = nil) {
        _ = jsObject[Strings.fill]!(fillRule?.jsValue() ?? .undefined)
    }

    func fill(path: Path2D, fillRule: CanvasFillRule? = nil) {
        _ = jsObject[Strings.fill]!(path.jsValue(), fillRule?.jsValue() ?? .undefined)
    }

    func stroke() {
        _ = jsObject[Strings.stroke]!()
    }

    func stroke(path: Path2D) {
        _ = jsObject[Strings.stroke]!(path.jsValue())
    }

    func clip(fillRule: CanvasFillRule? = nil) {
        _ = jsObject[Strings.clip]!(fillRule?.jsValue() ?? .undefined)
    }

    func clip(path: Path2D, fillRule: CanvasFillRule? = nil) {
        _ = jsObject[Strings.clip]!(path.jsValue(), fillRule?.jsValue() ?? .undefined)
    }

    func isPointInPath(x: Double, y: Double, fillRule: CanvasFillRule? = nil) -> Bool {
        jsObject[Strings.isPointInPath]!(x.jsValue(), y.jsValue(), fillRule?.jsValue() ?? .undefined).fromJSValue()!
    }

    func isPointInPath(path: Path2D, x: Double, y: Double, fillRule: CanvasFillRule? = nil) -> Bool {
        jsObject[Strings.isPointInPath]!(path.jsValue(), x.jsValue(), y.jsValue(), fillRule?.jsValue() ?? .undefined).fromJSValue()!
    }

    func isPointInStroke(x: Double, y: Double) -> Bool {
        jsObject[Strings.isPointInStroke]!(x.jsValue(), y.jsValue()).fromJSValue()!
    }

    func isPointInStroke(path: Path2D, x: Double, y: Double) -> Bool {
        jsObject[Strings.isPointInStroke]!(path.jsValue(), x.jsValue(), y.jsValue()).fromJSValue()!
    }
}
