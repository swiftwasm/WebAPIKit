// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class PerformanceTiming: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.PerformanceTiming].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _navigationStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.navigationStart)
        _unloadEventStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.unloadEventStart)
        _unloadEventEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.unloadEventEnd)
        _redirectStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.redirectStart)
        _redirectEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.redirectEnd)
        _fetchStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.fetchStart)
        _domainLookupStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.domainLookupStart)
        _domainLookupEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.domainLookupEnd)
        _connectStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.connectStart)
        _connectEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.connectEnd)
        _secureConnectionStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.secureConnectionStart)
        _requestStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.requestStart)
        _responseStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.responseStart)
        _responseEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.responseEnd)
        _domLoading = ReadonlyAttribute(jsObject: jsObject, name: Strings.domLoading)
        _domInteractive = ReadonlyAttribute(jsObject: jsObject, name: Strings.domInteractive)
        _domContentLoadedEventStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.domContentLoadedEventStart)
        _domContentLoadedEventEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.domContentLoadedEventEnd)
        _domComplete = ReadonlyAttribute(jsObject: jsObject, name: Strings.domComplete)
        _loadEventStart = ReadonlyAttribute(jsObject: jsObject, name: Strings.loadEventStart)
        _loadEventEnd = ReadonlyAttribute(jsObject: jsObject, name: Strings.loadEventEnd)
        self.jsObject = jsObject
    }

    @ReadonlyAttribute
    public var navigationStart: UInt64

    @ReadonlyAttribute
    public var unloadEventStart: UInt64

    @ReadonlyAttribute
    public var unloadEventEnd: UInt64

    @ReadonlyAttribute
    public var redirectStart: UInt64

    @ReadonlyAttribute
    public var redirectEnd: UInt64

    @ReadonlyAttribute
    public var fetchStart: UInt64

    @ReadonlyAttribute
    public var domainLookupStart: UInt64

    @ReadonlyAttribute
    public var domainLookupEnd: UInt64

    @ReadonlyAttribute
    public var connectStart: UInt64

    @ReadonlyAttribute
    public var connectEnd: UInt64

    @ReadonlyAttribute
    public var secureConnectionStart: UInt64

    @ReadonlyAttribute
    public var requestStart: UInt64

    @ReadonlyAttribute
    public var responseStart: UInt64

    @ReadonlyAttribute
    public var responseEnd: UInt64

    @ReadonlyAttribute
    public var domLoading: UInt64

    @ReadonlyAttribute
    public var domInteractive: UInt64

    @ReadonlyAttribute
    public var domContentLoadedEventStart: UInt64

    @ReadonlyAttribute
    public var domContentLoadedEventEnd: UInt64

    @ReadonlyAttribute
    public var domComplete: UInt64

    @ReadonlyAttribute
    public var loadEventStart: UInt64

    @ReadonlyAttribute
    public var loadEventEnd: UInt64

    public func toJSON() -> JSObject {
        let this = jsObject
        return this[Strings.toJSON].function!(this: this, arguments: []).fromJSValue()!
    }
}
