// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class VTTCue: TextTrackCue {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.VTTCue].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _region = ReadWriteAttribute(jsObject: jsObject, name: Strings.region)
        _vertical = ReadWriteAttribute(jsObject: jsObject, name: Strings.vertical)
        _snapToLines = ReadWriteAttribute(jsObject: jsObject, name: Strings.snapToLines)
        _line = ReadWriteAttribute(jsObject: jsObject, name: Strings.line)
        _lineAlign = ReadWriteAttribute(jsObject: jsObject, name: Strings.lineAlign)
        _position = ReadWriteAttribute(jsObject: jsObject, name: Strings.position)
        _positionAlign = ReadWriteAttribute(jsObject: jsObject, name: Strings.positionAlign)
        _size = ReadWriteAttribute(jsObject: jsObject, name: Strings.size)
        _align = ReadWriteAttribute(jsObject: jsObject, name: Strings.align)
        _text = ReadWriteAttribute(jsObject: jsObject, name: Strings.text)
        super.init(unsafelyWrapping: jsObject)
    }

    @inlinable public convenience init(startTime: Double, endTime: Double, text: String) {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: [startTime.jsValue(), endTime.jsValue(), text.jsValue()]))
    }

    @ReadWriteAttribute
    public var region: VTTRegion?

    @ReadWriteAttribute
    public var vertical: DirectionSetting

    @ReadWriteAttribute
    public var snapToLines: Bool

    @ReadWriteAttribute
    public var line: LineAndPositionSetting

    @ReadWriteAttribute
    public var lineAlign: LineAlignSetting

    @ReadWriteAttribute
    public var position: LineAndPositionSetting

    @ReadWriteAttribute
    public var positionAlign: PositionAlignSetting

    @ReadWriteAttribute
    public var size: Double

    @ReadWriteAttribute
    public var align: AlignSetting

    @ReadWriteAttribute
    public var text: String

    @inlinable public func getCueAsHTML() -> DocumentFragment {
        let this = jsObject
        return this[Strings.getCueAsHTML].function!(this: this, arguments: []).fromJSValue()!
    }
}
