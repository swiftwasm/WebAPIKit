// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class FontFaceSet: EventTarget {
    override public class var constructor: JSFunction { JSObject.global[Strings.FontFaceSet].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _onloading = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onloading)
        _onloadingdone = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onloadingdone)
        _onloadingerror = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onloadingerror)
        _ready = ReadonlyAttribute(jsObject: jsObject, name: Strings.ready)
        _status = ReadonlyAttribute(jsObject: jsObject, name: Strings.status)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(initialFaces: [FontFace]) {
        self.init(unsafelyWrapping: Self.constructor.new(initialFaces.jsValue()))
    }

    // XXX: make me Set-like!

    public func add(font: FontFace) -> Self {
        jsObject[Strings.add]!(font.jsValue()).fromJSValue()!
    }

    public func delete(font: FontFace) -> Bool {
        jsObject[Strings.delete]!(font.jsValue()).fromJSValue()!
    }

    public func clear() {
        _ = jsObject[Strings.clear]!()
    }

    @ClosureAttribute1Optional
    public var onloading: EventHandler

    @ClosureAttribute1Optional
    public var onloadingdone: EventHandler

    @ClosureAttribute1Optional
    public var onloadingerror: EventHandler

    public func load(font: String, text: String? = nil) -> JSPromise {
        jsObject[Strings.load]!(font.jsValue(), text?.jsValue() ?? .undefined).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func load(font: String, text: String? = nil) async throws -> [FontFace] {
        let _promise: JSPromise = jsObject[Strings.load]!(font.jsValue(), text?.jsValue() ?? .undefined).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func check(font: String, text: String? = nil) -> Bool {
        jsObject[Strings.check]!(font.jsValue(), text?.jsValue() ?? .undefined).fromJSValue()!
    }

    @ReadonlyAttribute
    public var ready: JSPromise

    @ReadonlyAttribute
    public var status: FontFaceSetLoadStatus
}
