// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class RequestInit: JSObject {
    public init(method: String, headers: HeadersInit, body: BodyInit?, referrer: String, referrerPolicy: ReferrerPolicy, mode: RequestMode, credentials: RequestCredentials, cache: RequestCache, redirect: RequestRedirect, integrity: String, keepalive: Bool, signal: AbortSignal?, window: JSValue) {
        let object = JSObject.global.Object.function!.new()
        object["method"] = method.jsValue()
        object["headers"] = headers.jsValue()
        object["body"] = body.jsValue()
        object["referrer"] = referrer.jsValue()
        object["referrerPolicy"] = referrerPolicy.jsValue()
        object["mode"] = mode.jsValue()
        object["credentials"] = credentials.jsValue()
        object["cache"] = cache.jsValue()
        object["redirect"] = redirect.jsValue()
        object["integrity"] = integrity.jsValue()
        object["keepalive"] = keepalive.jsValue()
        object["signal"] = signal.jsValue()
        object["window"] = window.jsValue()
        _method = ReadWriteAttribute(jsObject: object, name: "method")
        _headers = ReadWriteAttribute(jsObject: object, name: "headers")
        _body = ReadWriteAttribute(jsObject: object, name: "body")
        _referrer = ReadWriteAttribute(jsObject: object, name: "referrer")
        _referrerPolicy = ReadWriteAttribute(jsObject: object, name: "referrerPolicy")
        _mode = ReadWriteAttribute(jsObject: object, name: "mode")
        _credentials = ReadWriteAttribute(jsObject: object, name: "credentials")
        _cache = ReadWriteAttribute(jsObject: object, name: "cache")
        _redirect = ReadWriteAttribute(jsObject: object, name: "redirect")
        _integrity = ReadWriteAttribute(jsObject: object, name: "integrity")
        _keepalive = ReadWriteAttribute(jsObject: object, name: "keepalive")
        _signal = ReadWriteAttribute(jsObject: object, name: "signal")
        _window = ReadWriteAttribute(jsObject: object, name: "window")
        super.init(cloning: object)
    }

    @ReadWriteAttribute
    public var method: String

    @ReadWriteAttribute
    public var headers: HeadersInit

    @ReadWriteAttribute
    public var body: BodyInit?

    @ReadWriteAttribute
    public var referrer: String

    @ReadWriteAttribute
    public var referrerPolicy: ReferrerPolicy

    @ReadWriteAttribute
    public var mode: RequestMode

    @ReadWriteAttribute
    public var credentials: RequestCredentials

    @ReadWriteAttribute
    public var cache: RequestCache

    @ReadWriteAttribute
    public var redirect: RequestRedirect

    @ReadWriteAttribute
    public var integrity: String

    @ReadWriteAttribute
    public var keepalive: Bool

    @ReadWriteAttribute
    public var signal: AbortSignal?

    @ReadWriteAttribute
    public var window: JSValue
}
