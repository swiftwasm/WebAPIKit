// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class MockSensorConfiguration: BridgedDictionary {
    public convenience init(mockSensorType: MockSensorType, connected: Bool, maxSamplingFrequency: Double?, minSamplingFrequency: Double?) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.mockSensorType] = mockSensorType.jsValue
        object[Strings.connected] = connected.jsValue
        object[Strings.maxSamplingFrequency] = maxSamplingFrequency.jsValue
        object[Strings.minSamplingFrequency] = minSamplingFrequency.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _mockSensorType = ReadWriteAttribute(jsObject: object, name: Strings.mockSensorType)
        _connected = ReadWriteAttribute(jsObject: object, name: Strings.connected)
        _maxSamplingFrequency = ReadWriteAttribute(jsObject: object, name: Strings.maxSamplingFrequency)
        _minSamplingFrequency = ReadWriteAttribute(jsObject: object, name: Strings.minSamplingFrequency)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var mockSensorType: MockSensorType

    @ReadWriteAttribute
    public var connected: Bool

    @ReadWriteAttribute
    public var maxSamplingFrequency: Double?

    @ReadWriteAttribute
    public var minSamplingFrequency: Double?
}
