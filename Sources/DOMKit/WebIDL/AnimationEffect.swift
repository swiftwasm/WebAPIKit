// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class AnimationEffect: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.AnimationEffect].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _parent = ReadonlyAttribute(jsObject: jsObject, name: Strings.parent)
        _previousSibling = ReadonlyAttribute(jsObject: jsObject, name: Strings.previousSibling)
        _nextSibling = ReadonlyAttribute(jsObject: jsObject, name: Strings.nextSibling)
        self.jsObject = jsObject
    }

    @ReadonlyAttribute
    public var parent: GroupEffect?

    @ReadonlyAttribute
    public var previousSibling: AnimationEffect?

    @ReadonlyAttribute
    public var nextSibling: AnimationEffect?

    public func before(effects: AnimationEffect...) {
        let this = jsObject
        _ = this[Strings.before].function!(this: this, arguments: effects.map { $0.jsValue() })
    }

    public func after(effects: AnimationEffect...) {
        let this = jsObject
        _ = this[Strings.after].function!(this: this, arguments: effects.map { $0.jsValue() })
    }

    public func replace(effects: AnimationEffect...) {
        let this = jsObject
        _ = this[Strings.replace].function!(this: this, arguments: effects.map { $0.jsValue() })
    }

    public func remove() {
        let this = jsObject
        _ = this[Strings.remove].function!(this: this, arguments: [])
    }

    public func getTiming() -> EffectTiming {
        let this = jsObject
        return this[Strings.getTiming].function!(this: this, arguments: []).fromJSValue()!
    }

    public func getComputedTiming() -> ComputedEffectTiming {
        let this = jsObject
        return this[Strings.getComputedTiming].function!(this: this, arguments: []).fromJSValue()!
    }

    public func updateTiming(timing: OptionalEffectTiming? = nil) {
        let this = jsObject
        _ = this[Strings.updateTiming].function!(this: this, arguments: [timing?.jsValue() ?? .undefined])
    }
}
