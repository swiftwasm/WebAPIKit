// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class ErrorEvent: Event {
    override public class var constructor: JSFunction { JSObject.global.ErrorEvent.function! }

    private enum Keys {
        static let colno: JSString = "colno"
        static let error: JSString = "error"
        static let filename: JSString = "filename"
        static let lineno: JSString = "lineno"
        static let message: JSString = "message"
    }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _message = ReadonlyAttribute(jsObject: jsObject, name: Keys.message)
        _filename = ReadonlyAttribute(jsObject: jsObject, name: Keys.filename)
        _lineno = ReadonlyAttribute(jsObject: jsObject, name: Keys.lineno)
        _colno = ReadonlyAttribute(jsObject: jsObject, name: Keys.colno)
        _error = ReadonlyAttribute(jsObject: jsObject, name: Keys.error)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(type: String, eventInitDict: ErrorEventInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(type.jsValue(), eventInitDict?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var message: String

    @ReadonlyAttribute
    public var filename: String

    @ReadonlyAttribute
    public var lineno: UInt32

    @ReadonlyAttribute
    public var colno: UInt32

    @ReadonlyAttribute
    public var error: JSValue
}
