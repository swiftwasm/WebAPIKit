// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_MediaProvider: ConvertibleToJSValue {}
extension Blob: Any_MediaProvider {}
extension MediaSource: Any_MediaProvider {}
extension MediaStream: Any_MediaProvider {}

public enum MediaProvider: JSValueCompatible, Any_MediaProvider {
    case blob(Blob)
    case mediaSource(MediaSource)
    case mediaStream(MediaStream)

    var blob: Blob? {
        switch self {
        case let .blob(blob): return blob
        default: return nil
        }
    }

    var mediaSource: MediaSource? {
        switch self {
        case let .mediaSource(mediaSource): return mediaSource
        default: return nil
        }
    }

    var mediaStream: MediaStream? {
        switch self {
        case let .mediaStream(mediaStream): return mediaStream
        default: return nil
        }
    }

    public static func construct(from value: JSValue) -> Self? {
        if let blob: Blob = value.fromJSValue() {
            return .blob(blob)
        }
        if let mediaSource: MediaSource = value.fromJSValue() {
            return .mediaSource(mediaSource)
        }
        if let mediaStream: MediaStream = value.fromJSValue() {
            return .mediaStream(mediaStream)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .blob(blob):
            return blob.jsValue
        case let .mediaSource(mediaSource):
            return mediaSource.jsValue
        case let .mediaStream(mediaStream):
            return mediaStream.jsValue
        }
    }
}
