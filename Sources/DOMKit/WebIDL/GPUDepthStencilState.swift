// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class GPUDepthStencilState: BridgedDictionary {
    public convenience init(format: GPUTextureFormat, depthWriteEnabled: Bool, depthCompare: GPUCompareFunction, stencilFront: GPUStencilFaceState, stencilBack: GPUStencilFaceState, stencilReadMask: GPUStencilValue, stencilWriteMask: GPUStencilValue, depthBias: GPUDepthBias, depthBiasSlopeScale: Float, depthBiasClamp: Float) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.format] = format.jsValue
        object[Strings.depthWriteEnabled] = depthWriteEnabled.jsValue
        object[Strings.depthCompare] = depthCompare.jsValue
        object[Strings.stencilFront] = stencilFront.jsValue
        object[Strings.stencilBack] = stencilBack.jsValue
        object[Strings.stencilReadMask] = stencilReadMask.jsValue
        object[Strings.stencilWriteMask] = stencilWriteMask.jsValue
        object[Strings.depthBias] = depthBias.jsValue
        object[Strings.depthBiasSlopeScale] = depthBiasSlopeScale.jsValue
        object[Strings.depthBiasClamp] = depthBiasClamp.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _format = ReadWriteAttribute(jsObject: object, name: Strings.format)
        _depthWriteEnabled = ReadWriteAttribute(jsObject: object, name: Strings.depthWriteEnabled)
        _depthCompare = ReadWriteAttribute(jsObject: object, name: Strings.depthCompare)
        _stencilFront = ReadWriteAttribute(jsObject: object, name: Strings.stencilFront)
        _stencilBack = ReadWriteAttribute(jsObject: object, name: Strings.stencilBack)
        _stencilReadMask = ReadWriteAttribute(jsObject: object, name: Strings.stencilReadMask)
        _stencilWriteMask = ReadWriteAttribute(jsObject: object, name: Strings.stencilWriteMask)
        _depthBias = ReadWriteAttribute(jsObject: object, name: Strings.depthBias)
        _depthBiasSlopeScale = ReadWriteAttribute(jsObject: object, name: Strings.depthBiasSlopeScale)
        _depthBiasClamp = ReadWriteAttribute(jsObject: object, name: Strings.depthBiasClamp)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var format: GPUTextureFormat

    @ReadWriteAttribute
    public var depthWriteEnabled: Bool

    @ReadWriteAttribute
    public var depthCompare: GPUCompareFunction

    @ReadWriteAttribute
    public var stencilFront: GPUStencilFaceState

    @ReadWriteAttribute
    public var stencilBack: GPUStencilFaceState

    @ReadWriteAttribute
    public var stencilReadMask: GPUStencilValue

    @ReadWriteAttribute
    public var stencilWriteMask: GPUStencilValue

    @ReadWriteAttribute
    public var depthBias: GPUDepthBias

    @ReadWriteAttribute
    public var depthBiasSlopeScale: Float

    @ReadWriteAttribute
    public var depthBiasClamp: Float
}
