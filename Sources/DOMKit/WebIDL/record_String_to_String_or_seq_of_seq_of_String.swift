// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_record_String_to_String_or_seq_of_seq_of_String: ConvertibleToJSValue {}
extension Dictionary: Any_record_String_to_String_or_seq_of_seq_of_String where Key == String, Value == String {}
extension Array: Any_record_String_to_String_or_seq_of_seq_of_String where Element == [String] {}

public enum record_String_to_String_or_seq_of_seq_of_String: JSValueCompatible, Any_record_String_to_String_or_seq_of_seq_of_String {
    case record_String_to_String([String: String])
    case seq_of_seq_of_String([[String]])

    public static func construct(from value: JSValue) -> Self? {
        if let record_String_to_String: [String: String] = value.fromJSValue() {
            return .record_String_to_String(record_String_to_String)
        }
        if let seq_of_seq_of_String: [[String]] = value.fromJSValue() {
            return .seq_of_seq_of_String(seq_of_seq_of_String)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .record_String_to_String(record_String_to_String):
            return record_String_to_String.jsValue()
        case let .seq_of_seq_of_String(seq_of_seq_of_String):
            return seq_of_seq_of_String.jsValue()
        }
    }
}
