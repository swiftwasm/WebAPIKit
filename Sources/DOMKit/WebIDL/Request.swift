// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class Request: JSBridgedClass, Body {
    public class var constructor: JSFunction { JSObject.global.Request.function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _method = ReadonlyAttribute(jsObject: jsObject, name: "method")
        _url = ReadonlyAttribute(jsObject: jsObject, name: "url")
        _headers = ReadonlyAttribute(jsObject: jsObject, name: "headers")
        _destination = ReadonlyAttribute(jsObject: jsObject, name: "destination")
        _referrer = ReadonlyAttribute(jsObject: jsObject, name: "referrer")
        _referrerPolicy = ReadonlyAttribute(jsObject: jsObject, name: "referrerPolicy")
        _mode = ReadonlyAttribute(jsObject: jsObject, name: "mode")
        _credentials = ReadonlyAttribute(jsObject: jsObject, name: "credentials")
        _cache = ReadonlyAttribute(jsObject: jsObject, name: "cache")
        _redirect = ReadonlyAttribute(jsObject: jsObject, name: "redirect")
        _integrity = ReadonlyAttribute(jsObject: jsObject, name: "integrity")
        _keepalive = ReadonlyAttribute(jsObject: jsObject, name: "keepalive")
        _isReloadNavigation = ReadonlyAttribute(jsObject: jsObject, name: "isReloadNavigation")
        _isHistoryNavigation = ReadonlyAttribute(jsObject: jsObject, name: "isHistoryNavigation")
        _signal = ReadonlyAttribute(jsObject: jsObject, name: "signal")
        self.jsObject = jsObject
    }

    public convenience init(input: RequestInfo, init: RequestInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(input.jsValue(), `init`?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var method: String

    @ReadonlyAttribute
    public var url: String

    @ReadonlyAttribute
    public var headers: Headers

    @ReadonlyAttribute
    public var destination: RequestDestination

    @ReadonlyAttribute
    public var referrer: String

    @ReadonlyAttribute
    public var referrerPolicy: ReferrerPolicy

    @ReadonlyAttribute
    public var mode: RequestMode

    @ReadonlyAttribute
    public var credentials: RequestCredentials

    @ReadonlyAttribute
    public var cache: RequestCache

    @ReadonlyAttribute
    public var redirect: RequestRedirect

    @ReadonlyAttribute
    public var integrity: String

    @ReadonlyAttribute
    public var keepalive: Bool

    @ReadonlyAttribute
    public var isReloadNavigation: Bool

    @ReadonlyAttribute
    public var isHistoryNavigation: Bool

    @ReadonlyAttribute
    public var signal: AbortSignal

    public func clone() -> Self {
        jsObject["clone"]!().fromJSValue()!
    }
}
