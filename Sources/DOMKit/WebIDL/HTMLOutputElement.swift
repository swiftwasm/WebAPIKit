// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class HTMLOutputElement: HTMLElement {
    override public class var constructor: JSFunction { JSObject.global.HTMLOutputElement.function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _htmlFor = ReadonlyAttribute(jsObject: jsObject, name: "htmlFor")
        _form = ReadonlyAttribute(jsObject: jsObject, name: "form")
        _name = ReadWriteAttribute(jsObject: jsObject, name: "name")
        _type = ReadonlyAttribute(jsObject: jsObject, name: "type")
        _defaultValue = ReadWriteAttribute(jsObject: jsObject, name: "defaultValue")
        _value = ReadWriteAttribute(jsObject: jsObject, name: "value")
        _willValidate = ReadonlyAttribute(jsObject: jsObject, name: "willValidate")
        _validity = ReadonlyAttribute(jsObject: jsObject, name: "validity")
        _validationMessage = ReadonlyAttribute(jsObject: jsObject, name: "validationMessage")
        _labels = ReadonlyAttribute(jsObject: jsObject, name: "labels")
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new())
    }

    @ReadonlyAttribute
    public var htmlFor: DOMTokenList

    @ReadonlyAttribute
    public var form: HTMLFormElement?

    @ReadWriteAttribute
    public var name: String

    @ReadonlyAttribute
    public var type: String

    @ReadWriteAttribute
    public var defaultValue: String

    @ReadWriteAttribute
    public var value: String

    @ReadonlyAttribute
    public var willValidate: Bool

    @ReadonlyAttribute
    public var validity: ValidityState

    @ReadonlyAttribute
    public var validationMessage: String

    public func checkValidity() -> Bool {
        jsObject["checkValidity"]!().fromJSValue()!
    }

    public func reportValidity() -> Bool {
        jsObject["reportValidity"]!().fromJSValue()!
    }

    public func setCustomValidity(error: String) {
        _ = jsObject["setCustomValidity"]!(error.jsValue())
    }

    @ReadonlyAttribute
    public var labels: NodeList
}
