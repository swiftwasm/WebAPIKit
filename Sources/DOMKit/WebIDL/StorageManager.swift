// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class StorageManager: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.StorageManager].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        self.jsObject = jsObject
    }

    public func getDirectory() -> JSPromise {
        let this = jsObject
        return this[Strings.getDirectory].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getDirectory() async throws -> FileSystemDirectoryHandle {
        let this = jsObject
        let _promise: JSPromise = this[Strings.getDirectory].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func persisted() -> JSPromise {
        let this = jsObject
        return this[Strings.persisted].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func persisted() async throws -> Bool {
        let this = jsObject
        let _promise: JSPromise = this[Strings.persisted].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func persist() -> JSPromise {
        let this = jsObject
        return this[Strings.persist].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func persist() async throws -> Bool {
        let this = jsObject
        let _promise: JSPromise = this[Strings.persist].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func estimate() -> JSPromise {
        let this = jsObject
        return this[Strings.estimate].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func estimate() async throws -> StorageEstimate {
        let this = jsObject
        let _promise: JSPromise = this[Strings.estimate].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }
}
