// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public enum console {
    public static var jsObject: JSObject {
        JSObject.global.console.object!
    }

    public static func assert(condition: Bool? = nil, data: JSValue...) {
        _ = JSObject.global.console.object!["assert"]!(condition?.jsValue() ?? .undefined, data.jsValue())
    }

    public static func clear() {
        _ = JSObject.global.console.object!["clear"]!()
    }

    public static func debug(data: JSValue...) {
        _ = JSObject.global.console.object!["debug"]!(data.jsValue())
    }

    public static func error(data: JSValue...) {
        _ = JSObject.global.console.object!["error"]!(data.jsValue())
    }

    public static func info(data: JSValue...) {
        _ = JSObject.global.console.object!["info"]!(data.jsValue())
    }

    public static func log(data: JSValue...) {
        _ = JSObject.global.console.object!["log"]!(data.jsValue())
    }

    public static func table(tabularData: JSValue? = nil, properties: [String]? = nil) {
        _ = JSObject.global.console.object!["table"]!(tabularData?.jsValue() ?? .undefined, properties?.jsValue() ?? .undefined)
    }

    public static func trace(data: JSValue...) {
        _ = JSObject.global.console.object!["trace"]!(data.jsValue())
    }

    public static func warn(data: JSValue...) {
        _ = JSObject.global.console.object!["warn"]!(data.jsValue())
    }

    public static func dir(item: JSValue? = nil, options: JSObject? = nil) {
        _ = JSObject.global.console.object!["dir"]!(item?.jsValue() ?? .undefined, options?.jsValue() ?? .undefined)
    }

    public static func dirxml(data: JSValue...) {
        _ = JSObject.global.console.object!["dirxml"]!(data.jsValue())
    }

    public static func count(label: String? = nil) {
        _ = JSObject.global.console.object!["count"]!(label?.jsValue() ?? .undefined)
    }

    public static func countReset(label: String? = nil) {
        _ = JSObject.global.console.object!["countReset"]!(label?.jsValue() ?? .undefined)
    }

    public static func group(data: JSValue...) {
        _ = JSObject.global.console.object!["group"]!(data.jsValue())
    }

    public static func groupCollapsed(data: JSValue...) {
        _ = JSObject.global.console.object!["groupCollapsed"]!(data.jsValue())
    }

    public static func groupEnd() {
        _ = JSObject.global.console.object!["groupEnd"]!()
    }

    public static func time(label: String? = nil) {
        _ = JSObject.global.console.object!["time"]!(label?.jsValue() ?? .undefined)
    }

    public static func timeLog(label: String? = nil, data: JSValue...) {
        _ = JSObject.global.console.object!["timeLog"]!(label?.jsValue() ?? .undefined, data.jsValue())
    }

    public static func timeEnd(label: String? = nil) {
        _ = JSObject.global.console.object!["timeEnd"]!(label?.jsValue() ?? .undefined)
    }
}
