// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class MLConvTranspose2dOptions: BridgedDictionary {
    public convenience init(padding: [Int32], strides: [Int32], dilations: [Int32], outputPadding: [Int32], outputSizes: [Int32], autoPad: MLAutoPad, groups: Int32, inputLayout: MLInputOperandLayout, filterLayout: MLConvTranspose2dFilterOperandLayout, bias: MLOperand, activation: MLOperator) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.padding] = padding.jsValue
        object[Strings.strides] = strides.jsValue
        object[Strings.dilations] = dilations.jsValue
        object[Strings.outputPadding] = outputPadding.jsValue
        object[Strings.outputSizes] = outputSizes.jsValue
        object[Strings.autoPad] = autoPad.jsValue
        object[Strings.groups] = groups.jsValue
        object[Strings.inputLayout] = inputLayout.jsValue
        object[Strings.filterLayout] = filterLayout.jsValue
        object[Strings.bias] = bias.jsValue
        object[Strings.activation] = activation.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _padding = ReadWriteAttribute(jsObject: object, name: Strings.padding)
        _strides = ReadWriteAttribute(jsObject: object, name: Strings.strides)
        _dilations = ReadWriteAttribute(jsObject: object, name: Strings.dilations)
        _outputPadding = ReadWriteAttribute(jsObject: object, name: Strings.outputPadding)
        _outputSizes = ReadWriteAttribute(jsObject: object, name: Strings.outputSizes)
        _autoPad = ReadWriteAttribute(jsObject: object, name: Strings.autoPad)
        _groups = ReadWriteAttribute(jsObject: object, name: Strings.groups)
        _inputLayout = ReadWriteAttribute(jsObject: object, name: Strings.inputLayout)
        _filterLayout = ReadWriteAttribute(jsObject: object, name: Strings.filterLayout)
        _bias = ReadWriteAttribute(jsObject: object, name: Strings.bias)
        _activation = ReadWriteAttribute(jsObject: object, name: Strings.activation)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var padding: [Int32]

    @ReadWriteAttribute
    public var strides: [Int32]

    @ReadWriteAttribute
    public var dilations: [Int32]

    @ReadWriteAttribute
    public var outputPadding: [Int32]

    @ReadWriteAttribute
    public var outputSizes: [Int32]

    @ReadWriteAttribute
    public var autoPad: MLAutoPad

    @ReadWriteAttribute
    public var groups: Int32

    @ReadWriteAttribute
    public var inputLayout: MLInputOperandLayout

    @ReadWriteAttribute
    public var filterLayout: MLConvTranspose2dFilterOperandLayout

    @ReadWriteAttribute
    public var bias: MLOperand

    @ReadWriteAttribute
    public var activation: MLOperator
}
