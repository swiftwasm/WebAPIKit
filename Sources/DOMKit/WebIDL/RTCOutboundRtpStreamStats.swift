// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class RTCOutboundRtpStreamStats: BridgedDictionary {
    public convenience init(rtxSsrc: UInt32, mediaSourceId: String, senderId: String, remoteId: String, rid: String, lastPacketSentTimestamp: DOMHighResTimeStamp, headerBytesSent: UInt64, packetsDiscardedOnSend: UInt32, bytesDiscardedOnSend: UInt64, fecPacketsSent: UInt32, retransmittedPacketsSent: UInt64, retransmittedBytesSent: UInt64, targetBitrate: Double, totalEncodedBytesTarget: UInt64, frameWidth: UInt32, frameHeight: UInt32, frameBitDepth: UInt32, framesPerSecond: Double, framesSent: UInt32, hugeFramesSent: UInt32, framesEncoded: UInt32, keyFramesEncoded: UInt32, framesDiscardedOnSend: UInt32, qpSum: UInt64, totalSamplesSent: UInt64, samplesEncodedWithSilk: UInt64, samplesEncodedWithCelt: UInt64, voiceActivityFlag: Bool, totalEncodeTime: Double, totalPacketSendDelay: Double, averageRtcpInterval: Double, qualityLimitationReason: RTCQualityLimitationReason, qualityLimitationDurations: [String: Double], qualityLimitationResolutionChanges: UInt32, perDscpPacketsSent: [String: UInt64], nackCount: UInt32, firCount: UInt32, pliCount: UInt32, sliCount: UInt32, encoderImplementation: String) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.rtxSsrc] = rtxSsrc.jsValue
        object[Strings.mediaSourceId] = mediaSourceId.jsValue
        object[Strings.senderId] = senderId.jsValue
        object[Strings.remoteId] = remoteId.jsValue
        object[Strings.rid] = rid.jsValue
        object[Strings.lastPacketSentTimestamp] = lastPacketSentTimestamp.jsValue
        object[Strings.headerBytesSent] = headerBytesSent.jsValue
        object[Strings.packetsDiscardedOnSend] = packetsDiscardedOnSend.jsValue
        object[Strings.bytesDiscardedOnSend] = bytesDiscardedOnSend.jsValue
        object[Strings.fecPacketsSent] = fecPacketsSent.jsValue
        object[Strings.retransmittedPacketsSent] = retransmittedPacketsSent.jsValue
        object[Strings.retransmittedBytesSent] = retransmittedBytesSent.jsValue
        object[Strings.targetBitrate] = targetBitrate.jsValue
        object[Strings.totalEncodedBytesTarget] = totalEncodedBytesTarget.jsValue
        object[Strings.frameWidth] = frameWidth.jsValue
        object[Strings.frameHeight] = frameHeight.jsValue
        object[Strings.frameBitDepth] = frameBitDepth.jsValue
        object[Strings.framesPerSecond] = framesPerSecond.jsValue
        object[Strings.framesSent] = framesSent.jsValue
        object[Strings.hugeFramesSent] = hugeFramesSent.jsValue
        object[Strings.framesEncoded] = framesEncoded.jsValue
        object[Strings.keyFramesEncoded] = keyFramesEncoded.jsValue
        object[Strings.framesDiscardedOnSend] = framesDiscardedOnSend.jsValue
        object[Strings.qpSum] = qpSum.jsValue
        object[Strings.totalSamplesSent] = totalSamplesSent.jsValue
        object[Strings.samplesEncodedWithSilk] = samplesEncodedWithSilk.jsValue
        object[Strings.samplesEncodedWithCelt] = samplesEncodedWithCelt.jsValue
        object[Strings.voiceActivityFlag] = voiceActivityFlag.jsValue
        object[Strings.totalEncodeTime] = totalEncodeTime.jsValue
        object[Strings.totalPacketSendDelay] = totalPacketSendDelay.jsValue
        object[Strings.averageRtcpInterval] = averageRtcpInterval.jsValue
        object[Strings.qualityLimitationReason] = qualityLimitationReason.jsValue
        object[Strings.qualityLimitationDurations] = qualityLimitationDurations.jsValue
        object[Strings.qualityLimitationResolutionChanges] = qualityLimitationResolutionChanges.jsValue
        object[Strings.perDscpPacketsSent] = perDscpPacketsSent.jsValue
        object[Strings.nackCount] = nackCount.jsValue
        object[Strings.firCount] = firCount.jsValue
        object[Strings.pliCount] = pliCount.jsValue
        object[Strings.sliCount] = sliCount.jsValue
        object[Strings.encoderImplementation] = encoderImplementation.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _rtxSsrc = ReadWriteAttribute(jsObject: object, name: Strings.rtxSsrc)
        _mediaSourceId = ReadWriteAttribute(jsObject: object, name: Strings.mediaSourceId)
        _senderId = ReadWriteAttribute(jsObject: object, name: Strings.senderId)
        _remoteId = ReadWriteAttribute(jsObject: object, name: Strings.remoteId)
        _rid = ReadWriteAttribute(jsObject: object, name: Strings.rid)
        _lastPacketSentTimestamp = ReadWriteAttribute(jsObject: object, name: Strings.lastPacketSentTimestamp)
        _headerBytesSent = ReadWriteAttribute(jsObject: object, name: Strings.headerBytesSent)
        _packetsDiscardedOnSend = ReadWriteAttribute(jsObject: object, name: Strings.packetsDiscardedOnSend)
        _bytesDiscardedOnSend = ReadWriteAttribute(jsObject: object, name: Strings.bytesDiscardedOnSend)
        _fecPacketsSent = ReadWriteAttribute(jsObject: object, name: Strings.fecPacketsSent)
        _retransmittedPacketsSent = ReadWriteAttribute(jsObject: object, name: Strings.retransmittedPacketsSent)
        _retransmittedBytesSent = ReadWriteAttribute(jsObject: object, name: Strings.retransmittedBytesSent)
        _targetBitrate = ReadWriteAttribute(jsObject: object, name: Strings.targetBitrate)
        _totalEncodedBytesTarget = ReadWriteAttribute(jsObject: object, name: Strings.totalEncodedBytesTarget)
        _frameWidth = ReadWriteAttribute(jsObject: object, name: Strings.frameWidth)
        _frameHeight = ReadWriteAttribute(jsObject: object, name: Strings.frameHeight)
        _frameBitDepth = ReadWriteAttribute(jsObject: object, name: Strings.frameBitDepth)
        _framesPerSecond = ReadWriteAttribute(jsObject: object, name: Strings.framesPerSecond)
        _framesSent = ReadWriteAttribute(jsObject: object, name: Strings.framesSent)
        _hugeFramesSent = ReadWriteAttribute(jsObject: object, name: Strings.hugeFramesSent)
        _framesEncoded = ReadWriteAttribute(jsObject: object, name: Strings.framesEncoded)
        _keyFramesEncoded = ReadWriteAttribute(jsObject: object, name: Strings.keyFramesEncoded)
        _framesDiscardedOnSend = ReadWriteAttribute(jsObject: object, name: Strings.framesDiscardedOnSend)
        _qpSum = ReadWriteAttribute(jsObject: object, name: Strings.qpSum)
        _totalSamplesSent = ReadWriteAttribute(jsObject: object, name: Strings.totalSamplesSent)
        _samplesEncodedWithSilk = ReadWriteAttribute(jsObject: object, name: Strings.samplesEncodedWithSilk)
        _samplesEncodedWithCelt = ReadWriteAttribute(jsObject: object, name: Strings.samplesEncodedWithCelt)
        _voiceActivityFlag = ReadWriteAttribute(jsObject: object, name: Strings.voiceActivityFlag)
        _totalEncodeTime = ReadWriteAttribute(jsObject: object, name: Strings.totalEncodeTime)
        _totalPacketSendDelay = ReadWriteAttribute(jsObject: object, name: Strings.totalPacketSendDelay)
        _averageRtcpInterval = ReadWriteAttribute(jsObject: object, name: Strings.averageRtcpInterval)
        _qualityLimitationReason = ReadWriteAttribute(jsObject: object, name: Strings.qualityLimitationReason)
        _qualityLimitationDurations = ReadWriteAttribute(jsObject: object, name: Strings.qualityLimitationDurations)
        _qualityLimitationResolutionChanges = ReadWriteAttribute(jsObject: object, name: Strings.qualityLimitationResolutionChanges)
        _perDscpPacketsSent = ReadWriteAttribute(jsObject: object, name: Strings.perDscpPacketsSent)
        _nackCount = ReadWriteAttribute(jsObject: object, name: Strings.nackCount)
        _firCount = ReadWriteAttribute(jsObject: object, name: Strings.firCount)
        _pliCount = ReadWriteAttribute(jsObject: object, name: Strings.pliCount)
        _sliCount = ReadWriteAttribute(jsObject: object, name: Strings.sliCount)
        _encoderImplementation = ReadWriteAttribute(jsObject: object, name: Strings.encoderImplementation)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var rtxSsrc: UInt32

    @ReadWriteAttribute
    public var mediaSourceId: String

    @ReadWriteAttribute
    public var senderId: String

    @ReadWriteAttribute
    public var remoteId: String

    @ReadWriteAttribute
    public var rid: String

    @ReadWriteAttribute
    public var lastPacketSentTimestamp: DOMHighResTimeStamp

    @ReadWriteAttribute
    public var headerBytesSent: UInt64

    @ReadWriteAttribute
    public var packetsDiscardedOnSend: UInt32

    @ReadWriteAttribute
    public var bytesDiscardedOnSend: UInt64

    @ReadWriteAttribute
    public var fecPacketsSent: UInt32

    @ReadWriteAttribute
    public var retransmittedPacketsSent: UInt64

    @ReadWriteAttribute
    public var retransmittedBytesSent: UInt64

    @ReadWriteAttribute
    public var targetBitrate: Double

    @ReadWriteAttribute
    public var totalEncodedBytesTarget: UInt64

    @ReadWriteAttribute
    public var frameWidth: UInt32

    @ReadWriteAttribute
    public var frameHeight: UInt32

    @ReadWriteAttribute
    public var frameBitDepth: UInt32

    @ReadWriteAttribute
    public var framesPerSecond: Double

    @ReadWriteAttribute
    public var framesSent: UInt32

    @ReadWriteAttribute
    public var hugeFramesSent: UInt32

    @ReadWriteAttribute
    public var framesEncoded: UInt32

    @ReadWriteAttribute
    public var keyFramesEncoded: UInt32

    @ReadWriteAttribute
    public var framesDiscardedOnSend: UInt32

    @ReadWriteAttribute
    public var qpSum: UInt64

    @ReadWriteAttribute
    public var totalSamplesSent: UInt64

    @ReadWriteAttribute
    public var samplesEncodedWithSilk: UInt64

    @ReadWriteAttribute
    public var samplesEncodedWithCelt: UInt64

    @ReadWriteAttribute
    public var voiceActivityFlag: Bool

    @ReadWriteAttribute
    public var totalEncodeTime: Double

    @ReadWriteAttribute
    public var totalPacketSendDelay: Double

    @ReadWriteAttribute
    public var averageRtcpInterval: Double

    @ReadWriteAttribute
    public var qualityLimitationReason: RTCQualityLimitationReason

    @ReadWriteAttribute
    public var qualityLimitationDurations: [String: Double]

    @ReadWriteAttribute
    public var qualityLimitationResolutionChanges: UInt32

    @ReadWriteAttribute
    public var perDscpPacketsSent: [String: UInt64]

    @ReadWriteAttribute
    public var nackCount: UInt32

    @ReadWriteAttribute
    public var firCount: UInt32

    @ReadWriteAttribute
    public var pliCount: UInt32

    @ReadWriteAttribute
    public var sliCount: UInt32

    @ReadWriteAttribute
    public var encoderImplementation: String
}
