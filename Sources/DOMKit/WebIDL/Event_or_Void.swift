// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_Event_or_Void: ConvertibleToJSValue {}
extension Event: Any_Event_or_Void {}
extension Void: Any_Event_or_Void {}

public enum Event_or_Void: JSValueCompatible, Any_Event_or_Void {
    case event(Event)
    case void(Void)

    public static func construct(from value: JSValue) -> Self? {
        if let event: Event = value.fromJSValue() {
            return .event(event)
        }
        if let void: Void = value.fromJSValue() {
            return .void(void)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .event(event):
            return event.jsValue()
        case let .void(void):
            return void.jsValue()
        }
    }
}
