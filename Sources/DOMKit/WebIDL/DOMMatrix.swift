// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class DOMMatrix: DOMMatrixReadOnly {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.DOMMatrix].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _a = ReadWriteAttribute(jsObject: jsObject, name: Strings.a)
        _b = ReadWriteAttribute(jsObject: jsObject, name: Strings.b)
        _c = ReadWriteAttribute(jsObject: jsObject, name: Strings.c)
        _d = ReadWriteAttribute(jsObject: jsObject, name: Strings.d)
        _e = ReadWriteAttribute(jsObject: jsObject, name: Strings.e)
        _f = ReadWriteAttribute(jsObject: jsObject, name: Strings.f)
        _m11 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m11)
        _m12 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m12)
        _m13 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m13)
        _m14 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m14)
        _m21 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m21)
        _m22 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m22)
        _m23 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m23)
        _m24 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m24)
        _m31 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m31)
        _m32 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m32)
        _m33 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m33)
        _m34 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m34)
        _m41 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m41)
        _m42 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m42)
        _m43 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m43)
        _m44 = ReadWriteAttribute(jsObject: jsObject, name: Strings.m44)
        super.init(unsafelyWrapping: jsObject)
    }

    @inlinable public convenience init(init: String_or_seq_of_Double? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: [`init`?.jsValue ?? .undefined]))
    }

    // XXX: illegal static override
    // override public static func fromMatrix(other: DOMMatrixInit? = nil) -> Self

    // XXX: illegal static override
    // override public static func fromFloat32Array(array32: Float32Array) -> Self

    // XXX: illegal static override
    // override public static func fromFloat64Array(array64: Float64Array) -> Self

    @usableFromInline let _a: ReadWriteAttribute<Double>
    @inlinable override public var a: Double {
        get { _a.wrappedValue }
        set { _a.wrappedValue = newValue }
    }

    @usableFromInline let _b: ReadWriteAttribute<Double>
    @inlinable override public var b: Double {
        get { _b.wrappedValue }
        set { _b.wrappedValue = newValue }
    }

    @usableFromInline let _c: ReadWriteAttribute<Double>
    @inlinable override public var c: Double {
        get { _c.wrappedValue }
        set { _c.wrappedValue = newValue }
    }

    @usableFromInline let _d: ReadWriteAttribute<Double>
    @inlinable override public var d: Double {
        get { _d.wrappedValue }
        set { _d.wrappedValue = newValue }
    }

    @usableFromInline let _e: ReadWriteAttribute<Double>
    @inlinable override public var e: Double {
        get { _e.wrappedValue }
        set { _e.wrappedValue = newValue }
    }

    @usableFromInline let _f: ReadWriteAttribute<Double>
    @inlinable override public var f: Double {
        get { _f.wrappedValue }
        set { _f.wrappedValue = newValue }
    }

    @usableFromInline let _m11: ReadWriteAttribute<Double>
    @inlinable override public var m11: Double {
        get { _m11.wrappedValue }
        set { _m11.wrappedValue = newValue }
    }

    @usableFromInline let _m12: ReadWriteAttribute<Double>
    @inlinable override public var m12: Double {
        get { _m12.wrappedValue }
        set { _m12.wrappedValue = newValue }
    }

    @usableFromInline let _m13: ReadWriteAttribute<Double>
    @inlinable override public var m13: Double {
        get { _m13.wrappedValue }
        set { _m13.wrappedValue = newValue }
    }

    @usableFromInline let _m14: ReadWriteAttribute<Double>
    @inlinable override public var m14: Double {
        get { _m14.wrappedValue }
        set { _m14.wrappedValue = newValue }
    }

    @usableFromInline let _m21: ReadWriteAttribute<Double>
    @inlinable override public var m21: Double {
        get { _m21.wrappedValue }
        set { _m21.wrappedValue = newValue }
    }

    @usableFromInline let _m22: ReadWriteAttribute<Double>
    @inlinable override public var m22: Double {
        get { _m22.wrappedValue }
        set { _m22.wrappedValue = newValue }
    }

    @usableFromInline let _m23: ReadWriteAttribute<Double>
    @inlinable override public var m23: Double {
        get { _m23.wrappedValue }
        set { _m23.wrappedValue = newValue }
    }

    @usableFromInline let _m24: ReadWriteAttribute<Double>
    @inlinable override public var m24: Double {
        get { _m24.wrappedValue }
        set { _m24.wrappedValue = newValue }
    }

    @usableFromInline let _m31: ReadWriteAttribute<Double>
    @inlinable override public var m31: Double {
        get { _m31.wrappedValue }
        set { _m31.wrappedValue = newValue }
    }

    @usableFromInline let _m32: ReadWriteAttribute<Double>
    @inlinable override public var m32: Double {
        get { _m32.wrappedValue }
        set { _m32.wrappedValue = newValue }
    }

    @usableFromInline let _m33: ReadWriteAttribute<Double>
    @inlinable override public var m33: Double {
        get { _m33.wrappedValue }
        set { _m33.wrappedValue = newValue }
    }

    @usableFromInline let _m34: ReadWriteAttribute<Double>
    @inlinable override public var m34: Double {
        get { _m34.wrappedValue }
        set { _m34.wrappedValue = newValue }
    }

    @usableFromInline let _m41: ReadWriteAttribute<Double>
    @inlinable override public var m41: Double {
        get { _m41.wrappedValue }
        set { _m41.wrappedValue = newValue }
    }

    @usableFromInline let _m42: ReadWriteAttribute<Double>
    @inlinable override public var m42: Double {
        get { _m42.wrappedValue }
        set { _m42.wrappedValue = newValue }
    }

    @usableFromInline let _m43: ReadWriteAttribute<Double>
    @inlinable override public var m43: Double {
        get { _m43.wrappedValue }
        set { _m43.wrappedValue = newValue }
    }

    @usableFromInline let _m44: ReadWriteAttribute<Double>
    @inlinable override public var m44: Double {
        get { _m44.wrappedValue }
        set { _m44.wrappedValue = newValue }
    }

    @inlinable public func multiplySelf(other: DOMMatrixInit? = nil) -> Self {
        let this = jsObject
        return this[Strings.multiplySelf].function!(this: this, arguments: [other?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func preMultiplySelf(other: DOMMatrixInit? = nil) -> Self {
        let this = jsObject
        return this[Strings.preMultiplySelf].function!(this: this, arguments: [other?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func translateSelf(tx: Double? = nil, ty: Double? = nil, tz: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.translateSelf].function!(this: this, arguments: [tx?.jsValue ?? .undefined, ty?.jsValue ?? .undefined, tz?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func scaleSelf(scaleX: Double? = nil, scaleY: Double? = nil, scaleZ: Double? = nil, originX: Double? = nil, originY: Double? = nil, originZ: Double? = nil) -> Self {
        let _arg0 = scaleX?.jsValue ?? .undefined
        let _arg1 = scaleY?.jsValue ?? .undefined
        let _arg2 = scaleZ?.jsValue ?? .undefined
        let _arg3 = originX?.jsValue ?? .undefined
        let _arg4 = originY?.jsValue ?? .undefined
        let _arg5 = originZ?.jsValue ?? .undefined
        let this = jsObject
        return this[Strings.scaleSelf].function!(this: this, arguments: [_arg0, _arg1, _arg2, _arg3, _arg4, _arg5]).fromJSValue()!
    }

    @inlinable public func scale3dSelf(scale: Double? = nil, originX: Double? = nil, originY: Double? = nil, originZ: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.scale3dSelf].function!(this: this, arguments: [scale?.jsValue ?? .undefined, originX?.jsValue ?? .undefined, originY?.jsValue ?? .undefined, originZ?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func rotateSelf(rotX: Double? = nil, rotY: Double? = nil, rotZ: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.rotateSelf].function!(this: this, arguments: [rotX?.jsValue ?? .undefined, rotY?.jsValue ?? .undefined, rotZ?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func rotateFromVectorSelf(x: Double? = nil, y: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.rotateFromVectorSelf].function!(this: this, arguments: [x?.jsValue ?? .undefined, y?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func rotateAxisAngleSelf(x: Double? = nil, y: Double? = nil, z: Double? = nil, angle: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.rotateAxisAngleSelf].function!(this: this, arguments: [x?.jsValue ?? .undefined, y?.jsValue ?? .undefined, z?.jsValue ?? .undefined, angle?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func skewXSelf(sx: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.skewXSelf].function!(this: this, arguments: [sx?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func skewYSelf(sy: Double? = nil) -> Self {
        let this = jsObject
        return this[Strings.skewYSelf].function!(this: this, arguments: [sy?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func invertSelf() -> Self {
        let this = jsObject
        return this[Strings.invertSelf].function!(this: this, arguments: []).fromJSValue()!
    }

    @inlinable public func setMatrixValue(transformList: String) -> Self {
        let this = jsObject
        return this[Strings.setMatrixValue].function!(this: this, arguments: [transformList.jsValue]).fromJSValue()!
    }
}
