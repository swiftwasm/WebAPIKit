// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol CanvasPath: JSBridgedClass {}
public extension CanvasPath {
    func closePath() {
        _ = jsObject[Strings.closePath]!()
    }

    func moveTo(x: Double, y: Double) {
        _ = jsObject[Strings.moveTo]!(x.jsValue(), y.jsValue())
    }

    func lineTo(x: Double, y: Double) {
        _ = jsObject[Strings.lineTo]!(x.jsValue(), y.jsValue())
    }

    func quadraticCurveTo(cpx: Double, cpy: Double, x: Double, y: Double) {
        _ = jsObject[Strings.quadraticCurveTo]!(cpx.jsValue(), cpy.jsValue(), x.jsValue(), y.jsValue())
    }

    func bezierCurveTo(cp1x: Double, cp1y: Double, cp2x: Double, cp2y: Double, x: Double, y: Double) {
        let _arg0 = cp1x.jsValue()
        let _arg1 = cp1y.jsValue()
        let _arg2 = cp2x.jsValue()
        let _arg3 = cp2y.jsValue()
        let _arg4 = x.jsValue()
        let _arg5 = y.jsValue()
        _ = jsObject[Strings.bezierCurveTo]!(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5)
    }

    func arcTo(x1: Double, y1: Double, x2: Double, y2: Double, radius: Double) {
        _ = jsObject[Strings.arcTo]!(x1.jsValue(), y1.jsValue(), x2.jsValue(), y2.jsValue(), radius.jsValue())
    }

    func rect(x: Double, y: Double, w: Double, h: Double) {
        _ = jsObject[Strings.rect]!(x.jsValue(), y.jsValue(), w.jsValue(), h.jsValue())
    }

    func roundRect(x: Double, y: Double, w: Double, h: Double, radii: __UNSUPPORTED_UNION__? = nil) {
        _ = jsObject[Strings.roundRect]!(x.jsValue(), y.jsValue(), w.jsValue(), h.jsValue(), radii?.jsValue() ?? .undefined)
    }

    func arc(x: Double, y: Double, radius: Double, startAngle: Double, endAngle: Double, counterclockwise: Bool? = nil) {
        let _arg0 = x.jsValue()
        let _arg1 = y.jsValue()
        let _arg2 = radius.jsValue()
        let _arg3 = startAngle.jsValue()
        let _arg4 = endAngle.jsValue()
        let _arg5 = counterclockwise?.jsValue() ?? .undefined
        _ = jsObject[Strings.arc]!(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5)
    }

    func ellipse(x: Double, y: Double, radiusX: Double, radiusY: Double, rotation: Double, startAngle: Double, endAngle: Double, counterclockwise: Bool? = nil) {
        let _arg0 = x.jsValue()
        let _arg1 = y.jsValue()
        let _arg2 = radiusX.jsValue()
        let _arg3 = radiusY.jsValue()
        let _arg4 = rotation.jsValue()
        let _arg5 = startAngle.jsValue()
        let _arg6 = endAngle.jsValue()
        let _arg7 = counterclockwise?.jsValue() ?? .undefined
        _ = jsObject[Strings.ellipse]!(_arg0, _arg1, _arg2, _arg3, _arg4, _arg5, _arg6, _arg7)
    }
}
