// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class Location: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.Location.function! }

    private enum Keys {
        static let ancestorOrigins: JSString = "ancestorOrigins"
        static let assign: JSString = "assign"
        static let hash: JSString = "hash"
        static let host: JSString = "host"
        static let hostname: JSString = "hostname"
        static let href: JSString = "href"
        static let origin: JSString = "origin"
        static let pathname: JSString = "pathname"
        static let port: JSString = "port"
        static let `protocol`: JSString = "protocol"
        static let reload: JSString = "reload"
        static let replace: JSString = "replace"
        static let search: JSString = "search"
    }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _href = ReadWriteAttribute(jsObject: jsObject, name: Keys.href)
        _origin = ReadonlyAttribute(jsObject: jsObject, name: Keys.origin)
        _protocol = ReadWriteAttribute(jsObject: jsObject, name: Keys.protocol)
        _host = ReadWriteAttribute(jsObject: jsObject, name: Keys.host)
        _hostname = ReadWriteAttribute(jsObject: jsObject, name: Keys.hostname)
        _port = ReadWriteAttribute(jsObject: jsObject, name: Keys.port)
        _pathname = ReadWriteAttribute(jsObject: jsObject, name: Keys.pathname)
        _search = ReadWriteAttribute(jsObject: jsObject, name: Keys.search)
        _hash = ReadWriteAttribute(jsObject: jsObject, name: Keys.hash)
        _ancestorOrigins = ReadonlyAttribute(jsObject: jsObject, name: Keys.ancestorOrigins)
        self.jsObject = jsObject
    }

    @ReadWriteAttribute
    public var href: String

    @ReadonlyAttribute
    public var origin: String

    @ReadWriteAttribute
    public var `protocol`: String

    @ReadWriteAttribute
    public var host: String

    @ReadWriteAttribute
    public var hostname: String

    @ReadWriteAttribute
    public var port: String

    @ReadWriteAttribute
    public var pathname: String

    @ReadWriteAttribute
    public var search: String

    @ReadWriteAttribute
    public var hash: String

    public func assign(url: String) {
        jsObject[Keys.assign]!(url.jsValue()).fromJSValue()!
    }

    public func replace(url: String) {
        jsObject[Keys.replace]!(url.jsValue()).fromJSValue()!
    }

    public func reload() {
        jsObject[Keys.reload]!().fromJSValue()!
    }

    @ReadonlyAttribute
    public var ancestorOrigins: DOMStringList
}
