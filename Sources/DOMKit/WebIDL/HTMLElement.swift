// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class HTMLElement: Element, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement, ElementCSSInlineStyle {
    override public class var constructor: JSFunction { JSObject.global.HTMLElement.function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _title = ReadWriteAttribute(jsObject: jsObject, name: "title")
        _lang = ReadWriteAttribute(jsObject: jsObject, name: "lang")
        _translate = ReadWriteAttribute(jsObject: jsObject, name: "translate")
        _dir = ReadWriteAttribute(jsObject: jsObject, name: "dir")
        _hidden = ReadWriteAttribute(jsObject: jsObject, name: "hidden")
        _inert = ReadWriteAttribute(jsObject: jsObject, name: "inert")
        _accessKey = ReadWriteAttribute(jsObject: jsObject, name: "accessKey")
        _accessKeyLabel = ReadonlyAttribute(jsObject: jsObject, name: "accessKeyLabel")
        _draggable = ReadWriteAttribute(jsObject: jsObject, name: "draggable")
        _spellcheck = ReadWriteAttribute(jsObject: jsObject, name: "spellcheck")
        _autocapitalize = ReadWriteAttribute(jsObject: jsObject, name: "autocapitalize")
        _innerText = ReadWriteAttribute(jsObject: jsObject, name: "innerText")
        _outerText = ReadWriteAttribute(jsObject: jsObject, name: "outerText")
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new())
    }

    @ReadWriteAttribute
    public var title: String

    @ReadWriteAttribute
    public var lang: String

    @ReadWriteAttribute
    public var translate: Bool

    @ReadWriteAttribute
    public var dir: String

    @ReadWriteAttribute
    public var hidden: Bool

    @ReadWriteAttribute
    public var inert: Bool

    public func click() {
        _ = jsObject["click"]!()
    }

    @ReadWriteAttribute
    public var accessKey: String

    @ReadonlyAttribute
    public var accessKeyLabel: String

    @ReadWriteAttribute
    public var draggable: Bool

    @ReadWriteAttribute
    public var spellcheck: Bool

    @ReadWriteAttribute
    public var autocapitalize: String

    @ReadWriteAttribute
    public var innerText: String

    @ReadWriteAttribute
    public var outerText: String

    public func attachInternals() -> ElementInternals {
        jsObject["attachInternals"]!().fromJSValue()!
    }
}
