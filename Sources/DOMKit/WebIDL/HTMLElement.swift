// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class HTMLElement: Element, ElementCSSInlineStyle, GlobalEventHandlers, DocumentAndElementEventHandlers, ElementContentEditable, HTMLOrSVGElement {
    override public class var constructor: JSFunction { JSObject.global[Strings.HTMLElement].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _offsetParent = ReadonlyAttribute(jsObject: jsObject, name: Strings.offsetParent)
        _offsetTop = ReadonlyAttribute(jsObject: jsObject, name: Strings.offsetTop)
        _offsetLeft = ReadonlyAttribute(jsObject: jsObject, name: Strings.offsetLeft)
        _offsetWidth = ReadonlyAttribute(jsObject: jsObject, name: Strings.offsetWidth)
        _offsetHeight = ReadonlyAttribute(jsObject: jsObject, name: Strings.offsetHeight)
        _title = ReadWriteAttribute(jsObject: jsObject, name: Strings.title)
        _lang = ReadWriteAttribute(jsObject: jsObject, name: Strings.lang)
        _translate = ReadWriteAttribute(jsObject: jsObject, name: Strings.translate)
        _dir = ReadWriteAttribute(jsObject: jsObject, name: Strings.dir)
        _hidden = ReadWriteAttribute(jsObject: jsObject, name: Strings.hidden)
        _inert = ReadWriteAttribute(jsObject: jsObject, name: Strings.inert)
        _accessKey = ReadWriteAttribute(jsObject: jsObject, name: Strings.accessKey)
        _accessKeyLabel = ReadonlyAttribute(jsObject: jsObject, name: Strings.accessKeyLabel)
        _draggable = ReadWriteAttribute(jsObject: jsObject, name: Strings.draggable)
        _spellcheck = ReadWriteAttribute(jsObject: jsObject, name: Strings.spellcheck)
        _autocapitalize = ReadWriteAttribute(jsObject: jsObject, name: Strings.autocapitalize)
        _innerText = ReadWriteAttribute(jsObject: jsObject, name: Strings.innerText)
        _outerText = ReadWriteAttribute(jsObject: jsObject, name: Strings.outerText)
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadonlyAttribute
    public var offsetParent: Element?

    @ReadonlyAttribute
    public var offsetTop: Int32

    @ReadonlyAttribute
    public var offsetLeft: Int32

    @ReadonlyAttribute
    public var offsetWidth: Int32

    @ReadonlyAttribute
    public var offsetHeight: Int32

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new())
    }

    @ReadWriteAttribute
    public var title: String

    @ReadWriteAttribute
    public var lang: String

    @ReadWriteAttribute
    public var translate: Bool

    @ReadWriteAttribute
    public var dir: String

    @ReadWriteAttribute
    public var hidden: Bool

    @ReadWriteAttribute
    public var inert: Bool

    public func click() {
        _ = jsObject[Strings.click]!()
    }

    @ReadWriteAttribute
    public var accessKey: String

    @ReadonlyAttribute
    public var accessKeyLabel: String

    @ReadWriteAttribute
    public var draggable: Bool

    @ReadWriteAttribute
    public var spellcheck: Bool

    @ReadWriteAttribute
    public var autocapitalize: String

    @ReadWriteAttribute
    public var innerText: String

    @ReadWriteAttribute
    public var outerText: String

    public func attachInternals() -> ElementInternals {
        jsObject[Strings.attachInternals]!().fromJSValue()!
    }
}
