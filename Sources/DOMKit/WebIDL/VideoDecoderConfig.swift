// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class VideoDecoderConfig: BridgedDictionary {
    public convenience init(codec: String, description: BufferSource, codedWidth: UInt32, codedHeight: UInt32, displayAspectWidth: UInt32, displayAspectHeight: UInt32, colorSpace: VideoColorSpaceInit, hardwareAcceleration: HardwareAcceleration, optimizeForLatency: Bool) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.codec] = codec.jsValue
        object[Strings.description] = description.jsValue
        object[Strings.codedWidth] = codedWidth.jsValue
        object[Strings.codedHeight] = codedHeight.jsValue
        object[Strings.displayAspectWidth] = displayAspectWidth.jsValue
        object[Strings.displayAspectHeight] = displayAspectHeight.jsValue
        object[Strings.colorSpace] = colorSpace.jsValue
        object[Strings.hardwareAcceleration] = hardwareAcceleration.jsValue
        object[Strings.optimizeForLatency] = optimizeForLatency.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _codec = ReadWriteAttribute(jsObject: object, name: Strings.codec)
        _description = ReadWriteAttribute(jsObject: object, name: Strings.description)
        _codedWidth = ReadWriteAttribute(jsObject: object, name: Strings.codedWidth)
        _codedHeight = ReadWriteAttribute(jsObject: object, name: Strings.codedHeight)
        _displayAspectWidth = ReadWriteAttribute(jsObject: object, name: Strings.displayAspectWidth)
        _displayAspectHeight = ReadWriteAttribute(jsObject: object, name: Strings.displayAspectHeight)
        _colorSpace = ReadWriteAttribute(jsObject: object, name: Strings.colorSpace)
        _hardwareAcceleration = ReadWriteAttribute(jsObject: object, name: Strings.hardwareAcceleration)
        _optimizeForLatency = ReadWriteAttribute(jsObject: object, name: Strings.optimizeForLatency)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var codec: String

    @ReadWriteAttribute
    public var description: BufferSource

    @ReadWriteAttribute
    public var codedWidth: UInt32

    @ReadWriteAttribute
    public var codedHeight: UInt32

    @ReadWriteAttribute
    public var displayAspectWidth: UInt32

    @ReadWriteAttribute
    public var displayAspectHeight: UInt32

    @ReadWriteAttribute
    public var colorSpace: VideoColorSpaceInit

    @ReadWriteAttribute
    public var hardwareAcceleration: HardwareAcceleration

    @ReadWriteAttribute
    public var optimizeForLatency: Bool
}
