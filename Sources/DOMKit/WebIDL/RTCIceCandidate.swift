// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class RTCIceCandidate: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.RTCIceCandidate].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _candidate = ReadonlyAttribute(jsObject: jsObject, name: Strings.candidate)
        _sdpMid = ReadonlyAttribute(jsObject: jsObject, name: Strings.sdpMid)
        _sdpMLineIndex = ReadonlyAttribute(jsObject: jsObject, name: Strings.sdpMLineIndex)
        _foundation = ReadonlyAttribute(jsObject: jsObject, name: Strings.foundation)
        _component = ReadonlyAttribute(jsObject: jsObject, name: Strings.component)
        _priority = ReadonlyAttribute(jsObject: jsObject, name: Strings.priority)
        _address = ReadonlyAttribute(jsObject: jsObject, name: Strings.address)
        _protocol = ReadonlyAttribute(jsObject: jsObject, name: Strings.protocol)
        _port = ReadonlyAttribute(jsObject: jsObject, name: Strings.port)
        _type = ReadonlyAttribute(jsObject: jsObject, name: Strings.type)
        _tcpType = ReadonlyAttribute(jsObject: jsObject, name: Strings.tcpType)
        _relatedAddress = ReadonlyAttribute(jsObject: jsObject, name: Strings.relatedAddress)
        _relatedPort = ReadonlyAttribute(jsObject: jsObject, name: Strings.relatedPort)
        _usernameFragment = ReadonlyAttribute(jsObject: jsObject, name: Strings.usernameFragment)
        self.jsObject = jsObject
    }

    public convenience init(candidateInitDict: RTCIceCandidateInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(candidateInitDict?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var candidate: String

    @ReadonlyAttribute
    public var sdpMid: String?

    @ReadonlyAttribute
    public var sdpMLineIndex: UInt16?

    @ReadonlyAttribute
    public var foundation: String?

    @ReadonlyAttribute
    public var component: RTCIceComponent?

    @ReadonlyAttribute
    public var priority: UInt32?

    @ReadonlyAttribute
    public var address: String?

    @ReadonlyAttribute
    public var `protocol`: RTCIceProtocol?

    @ReadonlyAttribute
    public var port: UInt16?

    @ReadonlyAttribute
    public var type: RTCIceCandidateType?

    @ReadonlyAttribute
    public var tcpType: RTCIceTcpCandidateType?

    @ReadonlyAttribute
    public var relatedAddress: String?

    @ReadonlyAttribute
    public var relatedPort: UInt16?

    @ReadonlyAttribute
    public var usernameFragment: String?

    public func toJSON() -> RTCIceCandidateInit {
        jsObject[Strings.toJSON]!().fromJSValue()!
    }
}
