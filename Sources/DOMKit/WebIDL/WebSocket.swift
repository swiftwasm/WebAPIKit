// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class WebSocket: EventTarget {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.WebSocket].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _url = ReadonlyAttribute(jsObject: jsObject, name: Strings.url)
        _readyState = ReadonlyAttribute(jsObject: jsObject, name: Strings.readyState)
        _bufferedAmount = ReadonlyAttribute(jsObject: jsObject, name: Strings.bufferedAmount)
        _onopen = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onopen)
        _onerror = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onerror)
        _onclose = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onclose)
        _extensions = ReadonlyAttribute(jsObject: jsObject, name: Strings.extensions)
        _protocol = ReadonlyAttribute(jsObject: jsObject, name: Strings.protocol)
        _onmessage = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onmessage)
        _binaryType = ReadWriteAttribute(jsObject: jsObject, name: Strings.binaryType)
        super.init(unsafelyWrapping: jsObject)
    }

    @inlinable public convenience init(url: String, protocols: String_or_seq_of_String? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: [url.jsValue, protocols?.jsValue ?? .undefined]))
    }

    @ReadonlyAttribute
    public var url: String

    public static let CONNECTING: UInt16 = 0

    public static let OPEN: UInt16 = 1

    public static let CLOSING: UInt16 = 2

    public static let CLOSED: UInt16 = 3

    @ReadonlyAttribute
    public var readyState: UInt16

    @ReadonlyAttribute
    public var bufferedAmount: UInt64

    @ClosureAttribute1Optional
    public var onopen: EventHandler

    @ClosureAttribute1Optional
    public var onerror: EventHandler

    @ClosureAttribute1Optional
    public var onclose: EventHandler

    @ReadonlyAttribute
    public var extensions: String

    @ReadonlyAttribute
    public var `protocol`: String

    @inlinable public func close(code: UInt16? = nil, reason: String? = nil) {
        let this = jsObject
        _ = this[Strings.close].function!(this: this, arguments: [code?.jsValue ?? .undefined, reason?.jsValue ?? .undefined])
    }

    @ClosureAttribute1Optional
    public var onmessage: EventHandler

    @ReadWriteAttribute
    public var binaryType: BinaryType

    @inlinable public func send(data: Blob_or_BufferSource_or_String) {
        let this = jsObject
        _ = this[Strings.send].function!(this: this, arguments: [data.jsValue])
    }
}
