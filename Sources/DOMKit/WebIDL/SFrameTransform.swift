// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class SFrameTransform: JSBridgedClass, GenericTransformStream {
    @inlinable public class var constructor: JSFunction { JSObject.global[Strings.SFrameTransform].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _onerror = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onerror)
        self.jsObject = jsObject
    }

    @inlinable public convenience init(options: SFrameTransformOptions? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: [options?.jsValue ?? .undefined]))
    }

    @inlinable public func setEncryptionKey(key: CryptoKey, keyID: CryptoKeyID? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.setEncryptionKey].function!(this: this, arguments: [key.jsValue, keyID?.jsValue ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func setEncryptionKey(key: CryptoKey, keyID: CryptoKeyID? = nil) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.setEncryptionKey].function!(this: this, arguments: [key.jsValue, keyID?.jsValue ?? .undefined]).fromJSValue()!
        _ = try await _promise.value
    }

    @ClosureAttribute1Optional
    public var onerror: EventHandler
}
