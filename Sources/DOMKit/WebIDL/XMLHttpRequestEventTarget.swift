// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class XMLHttpRequestEventTarget: EventTarget {
    override public class var constructor: JSFunction { JSObject.global.XMLHttpRequestEventTarget.function! }

    private enum Keys {
        static let onabort: JSString = "onabort"
        static let onerror: JSString = "onerror"
        static let onload: JSString = "onload"
        static let onloadend: JSString = "onloadend"
        static let onloadstart: JSString = "onloadstart"
        static let onprogress: JSString = "onprogress"
        static let ontimeout: JSString = "ontimeout"
    }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _onloadstart = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onloadstart)
        _onprogress = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onprogress)
        _onabort = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onabort)
        _onerror = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onerror)
        _onload = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onload)
        _ontimeout = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.ontimeout)
        _onloadend = ClosureAttribute.Optional1(jsObject: jsObject, name: Keys.onloadend)
        super.init(unsafelyWrapping: jsObject)
    }

    @ClosureAttribute.Optional1
    public var onloadstart: EventHandler

    @ClosureAttribute.Optional1
    public var onprogress: EventHandler

    @ClosureAttribute.Optional1
    public var onabort: EventHandler

    @ClosureAttribute.Optional1
    public var onerror: EventHandler

    @ClosureAttribute.Optional1
    public var onload: EventHandler

    @ClosureAttribute.Optional1
    public var ontimeout: EventHandler

    @ClosureAttribute.Optional1
    public var onloadend: EventHandler
}
