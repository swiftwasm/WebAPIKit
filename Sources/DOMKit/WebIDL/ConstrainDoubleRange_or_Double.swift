// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_ConstrainDoubleRange_or_Double: ConvertibleToJSValue {}
extension ConstrainDoubleRange: Any_ConstrainDoubleRange_or_Double {}
extension Double: Any_ConstrainDoubleRange_or_Double {}

public enum ConstrainDoubleRange_or_Double: JSValueCompatible, Any_ConstrainDoubleRange_or_Double {
    case constrainDoubleRange(ConstrainDoubleRange)
    case double(Double)

    public static func construct(from value: JSValue) -> Self? {
        if let constrainDoubleRange: ConstrainDoubleRange = value.fromJSValue() {
            return .constrainDoubleRange(constrainDoubleRange)
        }
        if let double: Double = value.fromJSValue() {
            return .double(double)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .constrainDoubleRange(constrainDoubleRange):
            return constrainDoubleRange.jsValue()
        case let .double(double):
            return double.jsValue()
        }
    }
}
