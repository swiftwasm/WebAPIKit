// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class HTMLVideoElement: HTMLMediaElement {
    override public class var constructor: JSFunction { JSObject.global[Strings.HTMLVideoElement].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _width = ReadWriteAttribute(jsObject: jsObject, name: Strings.width)
        _height = ReadWriteAttribute(jsObject: jsObject, name: Strings.height)
        _videoWidth = ReadonlyAttribute(jsObject: jsObject, name: Strings.videoWidth)
        _videoHeight = ReadonlyAttribute(jsObject: jsObject, name: Strings.videoHeight)
        _poster = ReadWriteAttribute(jsObject: jsObject, name: Strings.poster)
        _playsInline = ReadWriteAttribute(jsObject: jsObject, name: Strings.playsInline)
        _onenterpictureinpicture = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onenterpictureinpicture)
        _onleavepictureinpicture = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onleavepictureinpicture)
        _autoPictureInPicture = ReadWriteAttribute(jsObject: jsObject, name: Strings.autoPictureInPicture)
        _disablePictureInPicture = ReadWriteAttribute(jsObject: jsObject, name: Strings.disablePictureInPicture)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new())
    }

    @ReadWriteAttribute
    public var width: UInt32

    @ReadWriteAttribute
    public var height: UInt32

    @ReadonlyAttribute
    public var videoWidth: UInt32

    @ReadonlyAttribute
    public var videoHeight: UInt32

    @ReadWriteAttribute
    public var poster: String

    @ReadWriteAttribute
    public var playsInline: Bool

    public func getVideoPlaybackQuality() -> VideoPlaybackQuality {
        jsObject[Strings.getVideoPlaybackQuality]!().fromJSValue()!
    }

    public func requestPictureInPicture() -> JSPromise {
        jsObject[Strings.requestPictureInPicture]!().fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func requestPictureInPicture() async throws -> PictureInPictureWindow {
        let _promise: JSPromise = jsObject[Strings.requestPictureInPicture]!().fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @ClosureAttribute.Optional1
    public var onenterpictureinpicture: EventHandler

    @ClosureAttribute.Optional1
    public var onleavepictureinpicture: EventHandler

    @ReadWriteAttribute
    public var autoPictureInPicture: Bool

    @ReadWriteAttribute
    public var disablePictureInPicture: Bool

    // XXX: member 'requestVideoFrameCallback' is ignored

    public func cancelVideoFrameCallback(handle: UInt32) {
        _ = jsObject[Strings.cancelVideoFrameCallback]!(handle.jsValue())
    }
}
