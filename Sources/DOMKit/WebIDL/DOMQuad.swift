// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class DOMQuad: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.DOMQuad.function! }

    private enum Keys {
        static let p1: JSString = "p1"
        static let p2: JSString = "p2"
        static let getBounds: JSString = "getBounds"
        static let toJSON: JSString = "toJSON"
        static let p3: JSString = "p3"
        static let fromRect: JSString = "fromRect"
        static let p4: JSString = "p4"
        static let fromQuad: JSString = "fromQuad"
    }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _p1 = ReadonlyAttribute(jsObject: jsObject, name: Keys.p1)
        _p2 = ReadonlyAttribute(jsObject: jsObject, name: Keys.p2)
        _p3 = ReadonlyAttribute(jsObject: jsObject, name: Keys.p3)
        _p4 = ReadonlyAttribute(jsObject: jsObject, name: Keys.p4)
        self.jsObject = jsObject
    }

    public convenience init(p1: DOMPointInit? = nil, p2: DOMPointInit? = nil, p3: DOMPointInit? = nil, p4: DOMPointInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(p1?.jsValue() ?? .undefined, p2?.jsValue() ?? .undefined, p3?.jsValue() ?? .undefined, p4?.jsValue() ?? .undefined))
    }

    public static func fromRect(other: DOMRectInit? = nil) -> Self {
        constructor[Keys.fromRect]!(other?.jsValue() ?? .undefined).fromJSValue()!
    }

    public static func fromQuad(other: DOMQuadInit? = nil) -> Self {
        constructor[Keys.fromQuad]!(other?.jsValue() ?? .undefined).fromJSValue()!
    }

    @ReadonlyAttribute
    public var p1: DOMPoint

    @ReadonlyAttribute
    public var p2: DOMPoint

    @ReadonlyAttribute
    public var p3: DOMPoint

    @ReadonlyAttribute
    public var p4: DOMPoint

    public func getBounds() -> DOMRect {
        jsObject[Keys.getBounds]!().fromJSValue()!
    }

    public func toJSON() -> JSObject {
        jsObject[Keys.toJSON]!().fromJSValue()!
    }
}
