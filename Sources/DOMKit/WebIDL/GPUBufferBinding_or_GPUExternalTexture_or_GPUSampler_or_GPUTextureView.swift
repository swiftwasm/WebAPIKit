// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView: ConvertibleToJSValue {}
extension GPUBufferBinding: Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView {}
extension GPUExternalTexture: Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView {}
extension GPUSampler: Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView {}
extension GPUTextureView: Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView {}

public enum GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView: JSValueCompatible, Any_GPUBufferBinding_or_GPUExternalTexture_or_GPUSampler_or_GPUTextureView {
    case gPUBufferBinding(GPUBufferBinding)
    case gPUExternalTexture(GPUExternalTexture)
    case gPUSampler(GPUSampler)
    case gPUTextureView(GPUTextureView)

    public static func construct(from value: JSValue) -> Self? {
        if let gPUBufferBinding: GPUBufferBinding = value.fromJSValue() {
            return .gPUBufferBinding(gPUBufferBinding)
        }
        if let gPUExternalTexture: GPUExternalTexture = value.fromJSValue() {
            return .gPUExternalTexture(gPUExternalTexture)
        }
        if let gPUSampler: GPUSampler = value.fromJSValue() {
            return .gPUSampler(gPUSampler)
        }
        if let gPUTextureView: GPUTextureView = value.fromJSValue() {
            return .gPUTextureView(gPUTextureView)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .gPUBufferBinding(gPUBufferBinding):
            return gPUBufferBinding.jsValue()
        case let .gPUExternalTexture(gPUExternalTexture):
            return gPUExternalTexture.jsValue()
        case let .gPUSampler(gPUSampler):
            return gPUSampler.jsValue()
        case let .gPUTextureView(gPUTextureView):
            return gPUTextureView.jsValue()
        }
    }
}
