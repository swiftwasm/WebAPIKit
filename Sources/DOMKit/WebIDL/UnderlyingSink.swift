// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class UnderlyingSink: BridgedDictionary {
    public convenience init(start: @escaping UnderlyingSinkStartCallback, write: @escaping UnderlyingSinkWriteCallback, close: @escaping UnderlyingSinkCloseCallback, abort: @escaping UnderlyingSinkAbortCallback, type: JSValue) {
        let object = JSObject.global[Strings.Object].function!.new()
        ClosureAttribute1[Strings.start, in: object] = start
        ClosureAttribute2[Strings.write, in: object] = write
        ClosureAttribute0[Strings.close, in: object] = close
        ClosureAttribute1[Strings.abort, in: object] = abort
        object[Strings.type] = type.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _start = ClosureAttribute1(jsObject: object, name: Strings.start)
        _write = ClosureAttribute2(jsObject: object, name: Strings.write)
        _close = ClosureAttribute0(jsObject: object, name: Strings.close)
        _abort = ClosureAttribute1(jsObject: object, name: Strings.abort)
        _type = ReadWriteAttribute(jsObject: object, name: Strings.type)
        super.init(unsafelyWrapping: object)
    }

    @ClosureAttribute1
    public var start: UnderlyingSinkStartCallback

    @ClosureAttribute2
    public var write: UnderlyingSinkWriteCallback

    @ClosureAttribute0
    public var close: UnderlyingSinkCloseCallback

    @ClosureAttribute1
    public var abort: UnderlyingSinkAbortCallback

    @ReadWriteAttribute
    public var type: JSValue
}
