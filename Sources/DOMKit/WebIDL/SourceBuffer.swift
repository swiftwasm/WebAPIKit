// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class SourceBuffer: EventTarget {
    override public class var constructor: JSFunction { JSObject.global[Strings.SourceBuffer].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _mode = ReadWriteAttribute(jsObject: jsObject, name: Strings.mode)
        _updating = ReadonlyAttribute(jsObject: jsObject, name: Strings.updating)
        _buffered = ReadonlyAttribute(jsObject: jsObject, name: Strings.buffered)
        _timestampOffset = ReadWriteAttribute(jsObject: jsObject, name: Strings.timestampOffset)
        _audioTracks = ReadonlyAttribute(jsObject: jsObject, name: Strings.audioTracks)
        _videoTracks = ReadonlyAttribute(jsObject: jsObject, name: Strings.videoTracks)
        _textTracks = ReadonlyAttribute(jsObject: jsObject, name: Strings.textTracks)
        _appendWindowStart = ReadWriteAttribute(jsObject: jsObject, name: Strings.appendWindowStart)
        _appendWindowEnd = ReadWriteAttribute(jsObject: jsObject, name: Strings.appendWindowEnd)
        _onupdatestart = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onupdatestart)
        _onupdate = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onupdate)
        _onupdateend = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onupdateend)
        _onerror = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onerror)
        _onabort = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onabort)
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadWriteAttribute
    public var mode: AppendMode

    @ReadonlyAttribute
    public var updating: Bool

    @ReadonlyAttribute
    public var buffered: TimeRanges

    @ReadWriteAttribute
    public var timestampOffset: Double

    @ReadonlyAttribute
    public var audioTracks: AudioTrackList

    @ReadonlyAttribute
    public var videoTracks: VideoTrackList

    @ReadonlyAttribute
    public var textTracks: TextTrackList

    @ReadWriteAttribute
    public var appendWindowStart: Double

    @ReadWriteAttribute
    public var appendWindowEnd: Double

    @ClosureAttribute.Optional1
    public var onupdatestart: EventHandler

    @ClosureAttribute.Optional1
    public var onupdate: EventHandler

    @ClosureAttribute.Optional1
    public var onupdateend: EventHandler

    @ClosureAttribute.Optional1
    public var onerror: EventHandler

    @ClosureAttribute.Optional1
    public var onabort: EventHandler

    public func appendBuffer(data: BufferSource) {
        _ = jsObject[Strings.appendBuffer]!(data.jsValue())
    }

    public func abort() {
        _ = jsObject[Strings.abort]!()
    }

    public func changeType(type: String) {
        _ = jsObject[Strings.changeType]!(type.jsValue())
    }

    public func remove(start: Double, end: Double) {
        _ = jsObject[Strings.remove]!(start.jsValue(), end.jsValue())
    }
}
