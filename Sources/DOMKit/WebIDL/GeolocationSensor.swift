// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class GeolocationSensor: Sensor {
    override public class var constructor: JSFunction { JSObject.global[Strings.GeolocationSensor].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _latitude = ReadonlyAttribute(jsObject: jsObject, name: Strings.latitude)
        _longitude = ReadonlyAttribute(jsObject: jsObject, name: Strings.longitude)
        _altitude = ReadonlyAttribute(jsObject: jsObject, name: Strings.altitude)
        _accuracy = ReadonlyAttribute(jsObject: jsObject, name: Strings.accuracy)
        _altitudeAccuracy = ReadonlyAttribute(jsObject: jsObject, name: Strings.altitudeAccuracy)
        _heading = ReadonlyAttribute(jsObject: jsObject, name: Strings.heading)
        _speed = ReadonlyAttribute(jsObject: jsObject, name: Strings.speed)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(options: GeolocationSensorOptions? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(options?.jsValue() ?? .undefined))
    }

    public static func read(readOptions: ReadOptions? = nil) -> JSPromise {
        let this = constructor
        return this[Strings.read].function!(this: this, arguments: [readOptions?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public static func read(readOptions: ReadOptions? = nil) async throws -> GeolocationSensorReading {
        let this = constructor
        let _promise: JSPromise = this[Strings.read].function!(this: this, arguments: [readOptions?.jsValue() ?? .undefined]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @ReadonlyAttribute
    public var latitude: Double?

    @ReadonlyAttribute
    public var longitude: Double?

    @ReadonlyAttribute
    public var altitude: Double?

    @ReadonlyAttribute
    public var accuracy: Double?

    @ReadonlyAttribute
    public var altitudeAccuracy: Double?

    @ReadonlyAttribute
    public var heading: Double?

    @ReadonlyAttribute
    public var speed: Double?
}
