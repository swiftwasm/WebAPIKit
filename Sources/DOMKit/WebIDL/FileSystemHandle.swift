// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class FileSystemHandle: JSBridgedClass {
    @inlinable public class var constructor: JSFunction { JSObject.global[Strings.FileSystemHandle].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _kind = ReadonlyAttribute(jsObject: jsObject, name: Strings.kind)
        _name = ReadonlyAttribute(jsObject: jsObject, name: Strings.name)
        self.jsObject = jsObject
    }

    @ReadonlyAttribute
    public var kind: FileSystemHandleKind

    @ReadonlyAttribute
    public var name: String

    @inlinable public func isSameEntry(other: FileSystemHandle) -> JSPromise {
        let this = jsObject
        return this[Strings.isSameEntry].function!(this: this, arguments: [other.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func isSameEntry(other: FileSystemHandle) async throws -> Bool {
        let this = jsObject
        let _promise: JSPromise = this[Strings.isSameEntry].function!(this: this, arguments: [other.jsValue()]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func queryPermission(descriptor: FileSystemHandlePermissionDescriptor? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.queryPermission].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func queryPermission(descriptor: FileSystemHandlePermissionDescriptor? = nil) async throws -> PermissionState {
        let this = jsObject
        let _promise: JSPromise = this[Strings.queryPermission].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func requestPermission(descriptor: FileSystemHandlePermissionDescriptor? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.requestPermission].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func requestPermission(descriptor: FileSystemHandlePermissionDescriptor? = nil) async throws -> PermissionState {
        let this = jsObject
        let _promise: JSPromise = this[Strings.requestPermission].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }
}
