// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol GlobalEventHandlers: JSBridgedClass {}
public extension GlobalEventHandlers {
    var onabort: EventHandler {
        get { ClosureAttribute.Optional1["onabort", in: jsObject] }
        set { ClosureAttribute.Optional1["onabort", in: jsObject] = newValue }
    }

    var onauxclick: EventHandler {
        get { ClosureAttribute.Optional1["onauxclick", in: jsObject] }
        set { ClosureAttribute.Optional1["onauxclick", in: jsObject] = newValue }
    }

    var onblur: EventHandler {
        get { ClosureAttribute.Optional1["onblur", in: jsObject] }
        set { ClosureAttribute.Optional1["onblur", in: jsObject] = newValue }
    }

    var oncancel: EventHandler {
        get { ClosureAttribute.Optional1["oncancel", in: jsObject] }
        set { ClosureAttribute.Optional1["oncancel", in: jsObject] = newValue }
    }

    var oncanplay: EventHandler {
        get { ClosureAttribute.Optional1["oncanplay", in: jsObject] }
        set { ClosureAttribute.Optional1["oncanplay", in: jsObject] = newValue }
    }

    var oncanplaythrough: EventHandler {
        get { ClosureAttribute.Optional1["oncanplaythrough", in: jsObject] }
        set { ClosureAttribute.Optional1["oncanplaythrough", in: jsObject] = newValue }
    }

    var onchange: EventHandler {
        get { ClosureAttribute.Optional1["onchange", in: jsObject] }
        set { ClosureAttribute.Optional1["onchange", in: jsObject] = newValue }
    }

    var onclick: EventHandler {
        get { ClosureAttribute.Optional1["onclick", in: jsObject] }
        set { ClosureAttribute.Optional1["onclick", in: jsObject] = newValue }
    }

    var onclose: EventHandler {
        get { ClosureAttribute.Optional1["onclose", in: jsObject] }
        set { ClosureAttribute.Optional1["onclose", in: jsObject] = newValue }
    }

    var oncontextlost: EventHandler {
        get { ClosureAttribute.Optional1["oncontextlost", in: jsObject] }
        set { ClosureAttribute.Optional1["oncontextlost", in: jsObject] = newValue }
    }

    var oncontextmenu: EventHandler {
        get { ClosureAttribute.Optional1["oncontextmenu", in: jsObject] }
        set { ClosureAttribute.Optional1["oncontextmenu", in: jsObject] = newValue }
    }

    var oncontextrestored: EventHandler {
        get { ClosureAttribute.Optional1["oncontextrestored", in: jsObject] }
        set { ClosureAttribute.Optional1["oncontextrestored", in: jsObject] = newValue }
    }

    var oncuechange: EventHandler {
        get { ClosureAttribute.Optional1["oncuechange", in: jsObject] }
        set { ClosureAttribute.Optional1["oncuechange", in: jsObject] = newValue }
    }

    var ondblclick: EventHandler {
        get { ClosureAttribute.Optional1["ondblclick", in: jsObject] }
        set { ClosureAttribute.Optional1["ondblclick", in: jsObject] = newValue }
    }

    var ondrag: EventHandler {
        get { ClosureAttribute.Optional1["ondrag", in: jsObject] }
        set { ClosureAttribute.Optional1["ondrag", in: jsObject] = newValue }
    }

    var ondragend: EventHandler {
        get { ClosureAttribute.Optional1["ondragend", in: jsObject] }
        set { ClosureAttribute.Optional1["ondragend", in: jsObject] = newValue }
    }

    var ondragenter: EventHandler {
        get { ClosureAttribute.Optional1["ondragenter", in: jsObject] }
        set { ClosureAttribute.Optional1["ondragenter", in: jsObject] = newValue }
    }

    var ondragleave: EventHandler {
        get { ClosureAttribute.Optional1["ondragleave", in: jsObject] }
        set { ClosureAttribute.Optional1["ondragleave", in: jsObject] = newValue }
    }

    var ondragover: EventHandler {
        get { ClosureAttribute.Optional1["ondragover", in: jsObject] }
        set { ClosureAttribute.Optional1["ondragover", in: jsObject] = newValue }
    }

    var ondragstart: EventHandler {
        get { ClosureAttribute.Optional1["ondragstart", in: jsObject] }
        set { ClosureAttribute.Optional1["ondragstart", in: jsObject] = newValue }
    }

    var ondrop: EventHandler {
        get { ClosureAttribute.Optional1["ondrop", in: jsObject] }
        set { ClosureAttribute.Optional1["ondrop", in: jsObject] = newValue }
    }

    var ondurationchange: EventHandler {
        get { ClosureAttribute.Optional1["ondurationchange", in: jsObject] }
        set { ClosureAttribute.Optional1["ondurationchange", in: jsObject] = newValue }
    }

    var onemptied: EventHandler {
        get { ClosureAttribute.Optional1["onemptied", in: jsObject] }
        set { ClosureAttribute.Optional1["onemptied", in: jsObject] = newValue }
    }

    var onended: EventHandler {
        get { ClosureAttribute.Optional1["onended", in: jsObject] }
        set { ClosureAttribute.Optional1["onended", in: jsObject] = newValue }
    }

    var onerror: OnErrorEventHandler {
        get { ClosureAttribute.Optional5["onerror", in: jsObject] }
        set { ClosureAttribute.Optional5["onerror", in: jsObject] = newValue }
    }

    var onfocus: EventHandler {
        get { ClosureAttribute.Optional1["onfocus", in: jsObject] }
        set { ClosureAttribute.Optional1["onfocus", in: jsObject] = newValue }
    }

    var onformdata: EventHandler {
        get { ClosureAttribute.Optional1["onformdata", in: jsObject] }
        set { ClosureAttribute.Optional1["onformdata", in: jsObject] = newValue }
    }

    var oninput: EventHandler {
        get { ClosureAttribute.Optional1["oninput", in: jsObject] }
        set { ClosureAttribute.Optional1["oninput", in: jsObject] = newValue }
    }

    var oninvalid: EventHandler {
        get { ClosureAttribute.Optional1["oninvalid", in: jsObject] }
        set { ClosureAttribute.Optional1["oninvalid", in: jsObject] = newValue }
    }

    var onkeydown: EventHandler {
        get { ClosureAttribute.Optional1["onkeydown", in: jsObject] }
        set { ClosureAttribute.Optional1["onkeydown", in: jsObject] = newValue }
    }

    var onkeypress: EventHandler {
        get { ClosureAttribute.Optional1["onkeypress", in: jsObject] }
        set { ClosureAttribute.Optional1["onkeypress", in: jsObject] = newValue }
    }

    var onkeyup: EventHandler {
        get { ClosureAttribute.Optional1["onkeyup", in: jsObject] }
        set { ClosureAttribute.Optional1["onkeyup", in: jsObject] = newValue }
    }

    var onload: EventHandler {
        get { ClosureAttribute.Optional1["onload", in: jsObject] }
        set { ClosureAttribute.Optional1["onload", in: jsObject] = newValue }
    }

    var onloadeddata: EventHandler {
        get { ClosureAttribute.Optional1["onloadeddata", in: jsObject] }
        set { ClosureAttribute.Optional1["onloadeddata", in: jsObject] = newValue }
    }

    var onloadedmetadata: EventHandler {
        get { ClosureAttribute.Optional1["onloadedmetadata", in: jsObject] }
        set { ClosureAttribute.Optional1["onloadedmetadata", in: jsObject] = newValue }
    }

    var onloadstart: EventHandler {
        get { ClosureAttribute.Optional1["onloadstart", in: jsObject] }
        set { ClosureAttribute.Optional1["onloadstart", in: jsObject] = newValue }
    }

    var onmousedown: EventHandler {
        get { ClosureAttribute.Optional1["onmousedown", in: jsObject] }
        set { ClosureAttribute.Optional1["onmousedown", in: jsObject] = newValue }
    }

    var onmouseenter: EventHandler {
        get { ClosureAttribute.Optional1["onmouseenter", in: jsObject] }
        set { ClosureAttribute.Optional1["onmouseenter", in: jsObject] = newValue }
    }

    var onmouseleave: EventHandler {
        get { ClosureAttribute.Optional1["onmouseleave", in: jsObject] }
        set { ClosureAttribute.Optional1["onmouseleave", in: jsObject] = newValue }
    }

    var onmousemove: EventHandler {
        get { ClosureAttribute.Optional1["onmousemove", in: jsObject] }
        set { ClosureAttribute.Optional1["onmousemove", in: jsObject] = newValue }
    }

    var onmouseout: EventHandler {
        get { ClosureAttribute.Optional1["onmouseout", in: jsObject] }
        set { ClosureAttribute.Optional1["onmouseout", in: jsObject] = newValue }
    }

    var onmouseover: EventHandler {
        get { ClosureAttribute.Optional1["onmouseover", in: jsObject] }
        set { ClosureAttribute.Optional1["onmouseover", in: jsObject] = newValue }
    }

    var onmouseup: EventHandler {
        get { ClosureAttribute.Optional1["onmouseup", in: jsObject] }
        set { ClosureAttribute.Optional1["onmouseup", in: jsObject] = newValue }
    }

    var onpause: EventHandler {
        get { ClosureAttribute.Optional1["onpause", in: jsObject] }
        set { ClosureAttribute.Optional1["onpause", in: jsObject] = newValue }
    }

    var onplay: EventHandler {
        get { ClosureAttribute.Optional1["onplay", in: jsObject] }
        set { ClosureAttribute.Optional1["onplay", in: jsObject] = newValue }
    }

    var onplaying: EventHandler {
        get { ClosureAttribute.Optional1["onplaying", in: jsObject] }
        set { ClosureAttribute.Optional1["onplaying", in: jsObject] = newValue }
    }

    var onprogress: EventHandler {
        get { ClosureAttribute.Optional1["onprogress", in: jsObject] }
        set { ClosureAttribute.Optional1["onprogress", in: jsObject] = newValue }
    }

    var onratechange: EventHandler {
        get { ClosureAttribute.Optional1["onratechange", in: jsObject] }
        set { ClosureAttribute.Optional1["onratechange", in: jsObject] = newValue }
    }

    var onreset: EventHandler {
        get { ClosureAttribute.Optional1["onreset", in: jsObject] }
        set { ClosureAttribute.Optional1["onreset", in: jsObject] = newValue }
    }

    var onresize: EventHandler {
        get { ClosureAttribute.Optional1["onresize", in: jsObject] }
        set { ClosureAttribute.Optional1["onresize", in: jsObject] = newValue }
    }

    var onscroll: EventHandler {
        get { ClosureAttribute.Optional1["onscroll", in: jsObject] }
        set { ClosureAttribute.Optional1["onscroll", in: jsObject] = newValue }
    }

    var onsecuritypolicyviolation: EventHandler {
        get { ClosureAttribute.Optional1["onsecuritypolicyviolation", in: jsObject] }
        set { ClosureAttribute.Optional1["onsecuritypolicyviolation", in: jsObject] = newValue }
    }

    var onseeked: EventHandler {
        get { ClosureAttribute.Optional1["onseeked", in: jsObject] }
        set { ClosureAttribute.Optional1["onseeked", in: jsObject] = newValue }
    }

    var onseeking: EventHandler {
        get { ClosureAttribute.Optional1["onseeking", in: jsObject] }
        set { ClosureAttribute.Optional1["onseeking", in: jsObject] = newValue }
    }

    var onselect: EventHandler {
        get { ClosureAttribute.Optional1["onselect", in: jsObject] }
        set { ClosureAttribute.Optional1["onselect", in: jsObject] = newValue }
    }

    var onslotchange: EventHandler {
        get { ClosureAttribute.Optional1["onslotchange", in: jsObject] }
        set { ClosureAttribute.Optional1["onslotchange", in: jsObject] = newValue }
    }

    var onstalled: EventHandler {
        get { ClosureAttribute.Optional1["onstalled", in: jsObject] }
        set { ClosureAttribute.Optional1["onstalled", in: jsObject] = newValue }
    }

    var onsubmit: EventHandler {
        get { ClosureAttribute.Optional1["onsubmit", in: jsObject] }
        set { ClosureAttribute.Optional1["onsubmit", in: jsObject] = newValue }
    }

    var onsuspend: EventHandler {
        get { ClosureAttribute.Optional1["onsuspend", in: jsObject] }
        set { ClosureAttribute.Optional1["onsuspend", in: jsObject] = newValue }
    }

    var ontimeupdate: EventHandler {
        get { ClosureAttribute.Optional1["ontimeupdate", in: jsObject] }
        set { ClosureAttribute.Optional1["ontimeupdate", in: jsObject] = newValue }
    }

    var ontoggle: EventHandler {
        get { ClosureAttribute.Optional1["ontoggle", in: jsObject] }
        set { ClosureAttribute.Optional1["ontoggle", in: jsObject] = newValue }
    }

    var onvolumechange: EventHandler {
        get { ClosureAttribute.Optional1["onvolumechange", in: jsObject] }
        set { ClosureAttribute.Optional1["onvolumechange", in: jsObject] = newValue }
    }

    var onwaiting: EventHandler {
        get { ClosureAttribute.Optional1["onwaiting", in: jsObject] }
        set { ClosureAttribute.Optional1["onwaiting", in: jsObject] = newValue }
    }

    var onwebkitanimationend: EventHandler {
        get { ClosureAttribute.Optional1["onwebkitanimationend", in: jsObject] }
        set { ClosureAttribute.Optional1["onwebkitanimationend", in: jsObject] = newValue }
    }

    var onwebkitanimationiteration: EventHandler {
        get { ClosureAttribute.Optional1["onwebkitanimationiteration", in: jsObject] }
        set { ClosureAttribute.Optional1["onwebkitanimationiteration", in: jsObject] = newValue }
    }

    var onwebkitanimationstart: EventHandler {
        get { ClosureAttribute.Optional1["onwebkitanimationstart", in: jsObject] }
        set { ClosureAttribute.Optional1["onwebkitanimationstart", in: jsObject] = newValue }
    }

    var onwebkittransitionend: EventHandler {
        get { ClosureAttribute.Optional1["onwebkittransitionend", in: jsObject] }
        set { ClosureAttribute.Optional1["onwebkittransitionend", in: jsObject] = newValue }
    }

    var onwheel: EventHandler {
        get { ClosureAttribute.Optional1["onwheel", in: jsObject] }
        set { ClosureAttribute.Optional1["onwheel", in: jsObject] = newValue }
    }
}
