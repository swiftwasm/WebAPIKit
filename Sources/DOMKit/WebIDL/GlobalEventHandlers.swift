// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol GlobalEventHandlers: JSBridgedClass {}
public extension GlobalEventHandlers {
    @inlinable var onabort: EventHandler {
        get { ClosureAttribute1Optional[Strings.onabort, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onabort, in: jsObject] = newValue }
    }

    @inlinable var onauxclick: EventHandler {
        get { ClosureAttribute1Optional[Strings.onauxclick, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onauxclick, in: jsObject] = newValue }
    }

    @inlinable var onblur: EventHandler {
        get { ClosureAttribute1Optional[Strings.onblur, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onblur, in: jsObject] = newValue }
    }

    @inlinable var oncancel: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncancel, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncancel, in: jsObject] = newValue }
    }

    @inlinable var oncanplay: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncanplay, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncanplay, in: jsObject] = newValue }
    }

    @inlinable var oncanplaythrough: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncanplaythrough, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncanplaythrough, in: jsObject] = newValue }
    }

    @inlinable var onchange: EventHandler {
        get { ClosureAttribute1Optional[Strings.onchange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onchange, in: jsObject] = newValue }
    }

    @inlinable var onclick: EventHandler {
        get { ClosureAttribute1Optional[Strings.onclick, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onclick, in: jsObject] = newValue }
    }

    @inlinable var onclose: EventHandler {
        get { ClosureAttribute1Optional[Strings.onclose, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onclose, in: jsObject] = newValue }
    }

    @inlinable var oncontextlost: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncontextlost, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncontextlost, in: jsObject] = newValue }
    }

    @inlinable var oncontextmenu: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncontextmenu, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncontextmenu, in: jsObject] = newValue }
    }

    @inlinable var oncontextrestored: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncontextrestored, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncontextrestored, in: jsObject] = newValue }
    }

    @inlinable var oncuechange: EventHandler {
        get { ClosureAttribute1Optional[Strings.oncuechange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oncuechange, in: jsObject] = newValue }
    }

    @inlinable var ondblclick: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondblclick, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondblclick, in: jsObject] = newValue }
    }

    @inlinable var ondrag: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondrag, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondrag, in: jsObject] = newValue }
    }

    @inlinable var ondragend: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondragend, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondragend, in: jsObject] = newValue }
    }

    @inlinable var ondragenter: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondragenter, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondragenter, in: jsObject] = newValue }
    }

    @inlinable var ondragleave: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondragleave, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondragleave, in: jsObject] = newValue }
    }

    @inlinable var ondragover: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondragover, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondragover, in: jsObject] = newValue }
    }

    @inlinable var ondragstart: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondragstart, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondragstart, in: jsObject] = newValue }
    }

    @inlinable var ondrop: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondrop, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondrop, in: jsObject] = newValue }
    }

    @inlinable var ondurationchange: EventHandler {
        get { ClosureAttribute1Optional[Strings.ondurationchange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ondurationchange, in: jsObject] = newValue }
    }

    @inlinable var onemptied: EventHandler {
        get { ClosureAttribute1Optional[Strings.onemptied, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onemptied, in: jsObject] = newValue }
    }

    @inlinable var onended: EventHandler {
        get { ClosureAttribute1Optional[Strings.onended, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onended, in: jsObject] = newValue }
    }

    @inlinable var onerror: OnErrorEventHandler {
        get { ClosureAttribute5Optional[Strings.onerror, in: jsObject] }
        nonmutating set { ClosureAttribute5Optional[Strings.onerror, in: jsObject] = newValue }
    }

    @inlinable var onfocus: EventHandler {
        get { ClosureAttribute1Optional[Strings.onfocus, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onfocus, in: jsObject] = newValue }
    }

    @inlinable var onformdata: EventHandler {
        get { ClosureAttribute1Optional[Strings.onformdata, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onformdata, in: jsObject] = newValue }
    }

    @inlinable var oninput: EventHandler {
        get { ClosureAttribute1Optional[Strings.oninput, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oninput, in: jsObject] = newValue }
    }

    @inlinable var oninvalid: EventHandler {
        get { ClosureAttribute1Optional[Strings.oninvalid, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.oninvalid, in: jsObject] = newValue }
    }

    @inlinable var onkeydown: EventHandler {
        get { ClosureAttribute1Optional[Strings.onkeydown, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onkeydown, in: jsObject] = newValue }
    }

    @inlinable var onkeypress: EventHandler {
        get { ClosureAttribute1Optional[Strings.onkeypress, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onkeypress, in: jsObject] = newValue }
    }

    @inlinable var onkeyup: EventHandler {
        get { ClosureAttribute1Optional[Strings.onkeyup, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onkeyup, in: jsObject] = newValue }
    }

    @inlinable var onload: EventHandler {
        get { ClosureAttribute1Optional[Strings.onload, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onload, in: jsObject] = newValue }
    }

    @inlinable var onloadeddata: EventHandler {
        get { ClosureAttribute1Optional[Strings.onloadeddata, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onloadeddata, in: jsObject] = newValue }
    }

    @inlinable var onloadedmetadata: EventHandler {
        get { ClosureAttribute1Optional[Strings.onloadedmetadata, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onloadedmetadata, in: jsObject] = newValue }
    }

    @inlinable var onloadstart: EventHandler {
        get { ClosureAttribute1Optional[Strings.onloadstart, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onloadstart, in: jsObject] = newValue }
    }

    @inlinable var onmousedown: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmousedown, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmousedown, in: jsObject] = newValue }
    }

    @inlinable var onmouseenter: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmouseenter, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmouseenter, in: jsObject] = newValue }
    }

    @inlinable var onmouseleave: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmouseleave, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmouseleave, in: jsObject] = newValue }
    }

    @inlinable var onmousemove: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmousemove, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmousemove, in: jsObject] = newValue }
    }

    @inlinable var onmouseout: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmouseout, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmouseout, in: jsObject] = newValue }
    }

    @inlinable var onmouseover: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmouseover, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmouseover, in: jsObject] = newValue }
    }

    @inlinable var onmouseup: EventHandler {
        get { ClosureAttribute1Optional[Strings.onmouseup, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onmouseup, in: jsObject] = newValue }
    }

    @inlinable var onpause: EventHandler {
        get { ClosureAttribute1Optional[Strings.onpause, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onpause, in: jsObject] = newValue }
    }

    @inlinable var onplay: EventHandler {
        get { ClosureAttribute1Optional[Strings.onplay, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onplay, in: jsObject] = newValue }
    }

    @inlinable var onplaying: EventHandler {
        get { ClosureAttribute1Optional[Strings.onplaying, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onplaying, in: jsObject] = newValue }
    }

    @inlinable var onprogress: EventHandler {
        get { ClosureAttribute1Optional[Strings.onprogress, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onprogress, in: jsObject] = newValue }
    }

    @inlinable var onratechange: EventHandler {
        get { ClosureAttribute1Optional[Strings.onratechange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onratechange, in: jsObject] = newValue }
    }

    @inlinable var onreset: EventHandler {
        get { ClosureAttribute1Optional[Strings.onreset, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onreset, in: jsObject] = newValue }
    }

    @inlinable var onresize: EventHandler {
        get { ClosureAttribute1Optional[Strings.onresize, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onresize, in: jsObject] = newValue }
    }

    @inlinable var onscroll: EventHandler {
        get { ClosureAttribute1Optional[Strings.onscroll, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onscroll, in: jsObject] = newValue }
    }

    @inlinable var onsecuritypolicyviolation: EventHandler {
        get { ClosureAttribute1Optional[Strings.onsecuritypolicyviolation, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onsecuritypolicyviolation, in: jsObject] = newValue }
    }

    @inlinable var onseeked: EventHandler {
        get { ClosureAttribute1Optional[Strings.onseeked, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onseeked, in: jsObject] = newValue }
    }

    @inlinable var onseeking: EventHandler {
        get { ClosureAttribute1Optional[Strings.onseeking, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onseeking, in: jsObject] = newValue }
    }

    @inlinable var onselect: EventHandler {
        get { ClosureAttribute1Optional[Strings.onselect, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onselect, in: jsObject] = newValue }
    }

    @inlinable var onslotchange: EventHandler {
        get { ClosureAttribute1Optional[Strings.onslotchange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onslotchange, in: jsObject] = newValue }
    }

    @inlinable var onstalled: EventHandler {
        get { ClosureAttribute1Optional[Strings.onstalled, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onstalled, in: jsObject] = newValue }
    }

    @inlinable var onsubmit: EventHandler {
        get { ClosureAttribute1Optional[Strings.onsubmit, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onsubmit, in: jsObject] = newValue }
    }

    @inlinable var onsuspend: EventHandler {
        get { ClosureAttribute1Optional[Strings.onsuspend, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onsuspend, in: jsObject] = newValue }
    }

    @inlinable var ontimeupdate: EventHandler {
        get { ClosureAttribute1Optional[Strings.ontimeupdate, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ontimeupdate, in: jsObject] = newValue }
    }

    @inlinable var ontoggle: EventHandler {
        get { ClosureAttribute1Optional[Strings.ontoggle, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.ontoggle, in: jsObject] = newValue }
    }

    @inlinable var onvolumechange: EventHandler {
        get { ClosureAttribute1Optional[Strings.onvolumechange, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onvolumechange, in: jsObject] = newValue }
    }

    @inlinable var onwaiting: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwaiting, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwaiting, in: jsObject] = newValue }
    }

    @inlinable var onwebkitanimationend: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwebkitanimationend, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwebkitanimationend, in: jsObject] = newValue }
    }

    @inlinable var onwebkitanimationiteration: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwebkitanimationiteration, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwebkitanimationiteration, in: jsObject] = newValue }
    }

    @inlinable var onwebkitanimationstart: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwebkitanimationstart, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwebkitanimationstart, in: jsObject] = newValue }
    }

    @inlinable var onwebkittransitionend: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwebkittransitionend, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwebkittransitionend, in: jsObject] = newValue }
    }

    @inlinable var onwheel: EventHandler {
        get { ClosureAttribute1Optional[Strings.onwheel, in: jsObject] }
        nonmutating set { ClosureAttribute1Optional[Strings.onwheel, in: jsObject] = newValue }
    }
}
