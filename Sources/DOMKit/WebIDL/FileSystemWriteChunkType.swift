// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_FileSystemWriteChunkType: ConvertibleToJSValue {}
extension Blob: Any_FileSystemWriteChunkType {}
extension BufferSource: Any_FileSystemWriteChunkType {}
extension String: Any_FileSystemWriteChunkType {}
extension WriteParams: Any_FileSystemWriteChunkType {}

public enum FileSystemWriteChunkType: JSValueCompatible, Any_FileSystemWriteChunkType {
    case blob(Blob)
    case bufferSource(BufferSource)
    case string(String)
    case writeParams(WriteParams)

    public static func construct(from value: JSValue) -> Self? {
        if let blob: Blob = value.fromJSValue() {
            return .blob(blob)
        }
        if let bufferSource: BufferSource = value.fromJSValue() {
            return .bufferSource(bufferSource)
        }
        if let string: String = value.fromJSValue() {
            return .string(string)
        }
        if let writeParams: WriteParams = value.fromJSValue() {
            return .writeParams(writeParams)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .blob(blob):
            return blob.jsValue
        case let .bufferSource(bufferSource):
            return bufferSource.jsValue
        case let .string(string):
            return string.jsValue
        case let .writeParams(writeParams):
            return writeParams.jsValue
        }
    }
}
