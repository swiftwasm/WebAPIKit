// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class DataTransfer: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.DataTransfer.function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _dropEffect = ReadWriteAttribute(jsObject: jsObject, name: "dropEffect")
        _effectAllowed = ReadWriteAttribute(jsObject: jsObject, name: "effectAllowed")
        _items = ReadonlyAttribute(jsObject: jsObject, name: "items")
        _types = ReadonlyAttribute(jsObject: jsObject, name: "types")
        _files = ReadonlyAttribute(jsObject: jsObject, name: "files")
        self.jsObject = jsObject
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new())
    }

    @ReadWriteAttribute
    public var dropEffect: String

    @ReadWriteAttribute
    public var effectAllowed: String

    @ReadonlyAttribute
    public var items: DataTransferItemList

    public func setDragImage(image: Element, x: Int32, y: Int32) {
        _ = jsObject["setDragImage"]!(image.jsValue(), x.jsValue(), y.jsValue())
    }

    @ReadonlyAttribute
    public var types: [String]

    public func getData(format: String) -> String {
        jsObject["getData"]!(format.jsValue()).fromJSValue()!
    }

    public func setData(format: String, data: String) {
        _ = jsObject["setData"]!(format.jsValue(), data.jsValue())
    }

    public func clearData(format: String? = nil) {
        _ = jsObject["clearData"]!(format?.jsValue() ?? .undefined)
    }

    @ReadonlyAttribute
    public var files: FileList
}
