// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class DataTransfer: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.DataTransfer].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _dropEffect = ReadWriteAttribute(jsObject: jsObject, name: Strings.dropEffect)
        _effectAllowed = ReadWriteAttribute(jsObject: jsObject, name: Strings.effectAllowed)
        _items = ReadonlyAttribute(jsObject: jsObject, name: Strings.items)
        _types = ReadonlyAttribute(jsObject: jsObject, name: Strings.types)
        _files = ReadonlyAttribute(jsObject: jsObject, name: Strings.files)
        self.jsObject = jsObject
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: []))
    }

    @ReadWriteAttribute
    public var dropEffect: String

    @ReadWriteAttribute
    public var effectAllowed: String

    @ReadonlyAttribute
    public var items: DataTransferItemList

    public func setDragImage(image: Element, x: Int32, y: Int32) {
        let this = jsObject
        _ = this[Strings.setDragImage].function!(this: this, arguments: [image.jsValue(), x.jsValue(), y.jsValue()])
    }

    @ReadonlyAttribute
    public var types: [String]

    public func getData(format: String) -> String {
        let this = jsObject
        return this[Strings.getData].function!(this: this, arguments: [format.jsValue()]).fromJSValue()!
    }

    public func setData(format: String, data: String) {
        let this = jsObject
        _ = this[Strings.setData].function!(this: this, arguments: [format.jsValue(), data.jsValue()])
    }

    public func clearData(format: String? = nil) {
        let this = jsObject
        _ = this[Strings.clearData].function!(this: this, arguments: [format?.jsValue() ?? .undefined])
    }

    @ReadonlyAttribute
    public var files: FileList
}
