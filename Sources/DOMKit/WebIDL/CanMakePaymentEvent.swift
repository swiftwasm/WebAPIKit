// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class CanMakePaymentEvent: ExtendableEvent {
    override public class var constructor: JSFunction { JSObject.global[Strings.CanMakePaymentEvent].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _topOrigin = ReadonlyAttribute(jsObject: jsObject, name: Strings.topOrigin)
        _paymentRequestOrigin = ReadonlyAttribute(jsObject: jsObject, name: Strings.paymentRequestOrigin)
        _methodData = ReadonlyAttribute(jsObject: jsObject, name: Strings.methodData)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(type: String, eventInitDict: CanMakePaymentEventInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(type.jsValue(), eventInitDict?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var topOrigin: String

    @ReadonlyAttribute
    public var paymentRequestOrigin: String

    @ReadonlyAttribute
    public var methodData: [PaymentMethodData]

    public func respondWith(canMakePaymentResponse: JSPromise) {
        _ = jsObject[Strings.respondWith]!(canMakePaymentResponse.jsValue())
    }
}
