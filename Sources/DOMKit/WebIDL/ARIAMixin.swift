// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol ARIAMixin: JSBridgedClass {}
public extension ARIAMixin {
    @inlinable var role: String? {
        get { ReadWriteAttribute[Strings.role, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.role, in: jsObject] = newValue }
    }

    @inlinable var ariaAtomic: String? {
        get { ReadWriteAttribute[Strings.ariaAtomic, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaAtomic, in: jsObject] = newValue }
    }

    @inlinable var ariaAutoComplete: String? {
        get { ReadWriteAttribute[Strings.ariaAutoComplete, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaAutoComplete, in: jsObject] = newValue }
    }

    @inlinable var ariaBusy: String? {
        get { ReadWriteAttribute[Strings.ariaBusy, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaBusy, in: jsObject] = newValue }
    }

    @inlinable var ariaChecked: String? {
        get { ReadWriteAttribute[Strings.ariaChecked, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaChecked, in: jsObject] = newValue }
    }

    @inlinable var ariaColCount: String? {
        get { ReadWriteAttribute[Strings.ariaColCount, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaColCount, in: jsObject] = newValue }
    }

    @inlinable var ariaColIndex: String? {
        get { ReadWriteAttribute[Strings.ariaColIndex, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaColIndex, in: jsObject] = newValue }
    }

    @inlinable var ariaColIndexText: String? {
        get { ReadWriteAttribute[Strings.ariaColIndexText, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaColIndexText, in: jsObject] = newValue }
    }

    @inlinable var ariaColSpan: String? {
        get { ReadWriteAttribute[Strings.ariaColSpan, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaColSpan, in: jsObject] = newValue }
    }

    @inlinable var ariaCurrent: String? {
        get { ReadWriteAttribute[Strings.ariaCurrent, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaCurrent, in: jsObject] = newValue }
    }

    @inlinable var ariaDescription: String? {
        get { ReadWriteAttribute[Strings.ariaDescription, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaDescription, in: jsObject] = newValue }
    }

    @inlinable var ariaDisabled: String? {
        get { ReadWriteAttribute[Strings.ariaDisabled, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaDisabled, in: jsObject] = newValue }
    }

    @inlinable var ariaExpanded: String? {
        get { ReadWriteAttribute[Strings.ariaExpanded, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaExpanded, in: jsObject] = newValue }
    }

    @inlinable var ariaHasPopup: String? {
        get { ReadWriteAttribute[Strings.ariaHasPopup, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaHasPopup, in: jsObject] = newValue }
    }

    @inlinable var ariaHidden: String? {
        get { ReadWriteAttribute[Strings.ariaHidden, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaHidden, in: jsObject] = newValue }
    }

    @inlinable var ariaInvalid: String? {
        get { ReadWriteAttribute[Strings.ariaInvalid, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaInvalid, in: jsObject] = newValue }
    }

    @inlinable var ariaKeyShortcuts: String? {
        get { ReadWriteAttribute[Strings.ariaKeyShortcuts, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaKeyShortcuts, in: jsObject] = newValue }
    }

    @inlinable var ariaLabel: String? {
        get { ReadWriteAttribute[Strings.ariaLabel, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaLabel, in: jsObject] = newValue }
    }

    @inlinable var ariaLevel: String? {
        get { ReadWriteAttribute[Strings.ariaLevel, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaLevel, in: jsObject] = newValue }
    }

    @inlinable var ariaLive: String? {
        get { ReadWriteAttribute[Strings.ariaLive, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaLive, in: jsObject] = newValue }
    }

    @inlinable var ariaModal: String? {
        get { ReadWriteAttribute[Strings.ariaModal, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaModal, in: jsObject] = newValue }
    }

    @inlinable var ariaMultiLine: String? {
        get { ReadWriteAttribute[Strings.ariaMultiLine, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaMultiLine, in: jsObject] = newValue }
    }

    @inlinable var ariaMultiSelectable: String? {
        get { ReadWriteAttribute[Strings.ariaMultiSelectable, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaMultiSelectable, in: jsObject] = newValue }
    }

    @inlinable var ariaOrientation: String? {
        get { ReadWriteAttribute[Strings.ariaOrientation, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaOrientation, in: jsObject] = newValue }
    }

    @inlinable var ariaPlaceholder: String? {
        get { ReadWriteAttribute[Strings.ariaPlaceholder, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaPlaceholder, in: jsObject] = newValue }
    }

    @inlinable var ariaPosInSet: String? {
        get { ReadWriteAttribute[Strings.ariaPosInSet, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaPosInSet, in: jsObject] = newValue }
    }

    @inlinable var ariaPressed: String? {
        get { ReadWriteAttribute[Strings.ariaPressed, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaPressed, in: jsObject] = newValue }
    }

    @inlinable var ariaReadOnly: String? {
        get { ReadWriteAttribute[Strings.ariaReadOnly, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaReadOnly, in: jsObject] = newValue }
    }

    @inlinable var ariaRequired: String? {
        get { ReadWriteAttribute[Strings.ariaRequired, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRequired, in: jsObject] = newValue }
    }

    @inlinable var ariaRoleDescription: String? {
        get { ReadWriteAttribute[Strings.ariaRoleDescription, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRoleDescription, in: jsObject] = newValue }
    }

    @inlinable var ariaRowCount: String? {
        get { ReadWriteAttribute[Strings.ariaRowCount, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRowCount, in: jsObject] = newValue }
    }

    @inlinable var ariaRowIndex: String? {
        get { ReadWriteAttribute[Strings.ariaRowIndex, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRowIndex, in: jsObject] = newValue }
    }

    @inlinable var ariaRowIndexText: String? {
        get { ReadWriteAttribute[Strings.ariaRowIndexText, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRowIndexText, in: jsObject] = newValue }
    }

    @inlinable var ariaRowSpan: String? {
        get { ReadWriteAttribute[Strings.ariaRowSpan, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaRowSpan, in: jsObject] = newValue }
    }

    @inlinable var ariaSelected: String? {
        get { ReadWriteAttribute[Strings.ariaSelected, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaSelected, in: jsObject] = newValue }
    }

    @inlinable var ariaSetSize: String? {
        get { ReadWriteAttribute[Strings.ariaSetSize, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaSetSize, in: jsObject] = newValue }
    }

    @inlinable var ariaSort: String? {
        get { ReadWriteAttribute[Strings.ariaSort, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaSort, in: jsObject] = newValue }
    }

    @inlinable var ariaValueMax: String? {
        get { ReadWriteAttribute[Strings.ariaValueMax, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaValueMax, in: jsObject] = newValue }
    }

    @inlinable var ariaValueMin: String? {
        get { ReadWriteAttribute[Strings.ariaValueMin, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaValueMin, in: jsObject] = newValue }
    }

    @inlinable var ariaValueNow: String? {
        get { ReadWriteAttribute[Strings.ariaValueNow, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaValueNow, in: jsObject] = newValue }
    }

    @inlinable var ariaValueText: String? {
        get { ReadWriteAttribute[Strings.ariaValueText, in: jsObject] }
        nonmutating set { ReadWriteAttribute[Strings.ariaValueText, in: jsObject] = newValue }
    }
}
