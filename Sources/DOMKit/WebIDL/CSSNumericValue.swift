// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class CSSNumericValue: CSSStyleValue {
    override public class var constructor: JSFunction { JSObject.global[Strings.CSSNumericValue].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        super.init(unsafelyWrapping: jsObject)
    }

    public func add(values: CSSNumberish...) -> Self {
        jsObject[Strings.add]!(values.jsValue()).fromJSValue()!
    }

    public func sub(values: CSSNumberish...) -> Self {
        jsObject[Strings.sub]!(values.jsValue()).fromJSValue()!
    }

    public func mul(values: CSSNumberish...) -> Self {
        jsObject[Strings.mul]!(values.jsValue()).fromJSValue()!
    }

    public func div(values: CSSNumberish...) -> Self {
        jsObject[Strings.div]!(values.jsValue()).fromJSValue()!
    }

    public func min(values: CSSNumberish...) -> Self {
        jsObject[Strings.min]!(values.jsValue()).fromJSValue()!
    }

    public func max(values: CSSNumberish...) -> Self {
        jsObject[Strings.max]!(values.jsValue()).fromJSValue()!
    }

    public func equals(value: CSSNumberish...) -> Bool {
        jsObject[Strings.equals]!(value.jsValue()).fromJSValue()!
    }

    public func to(unit: String) -> CSSUnitValue {
        jsObject[Strings.to]!(unit.jsValue()).fromJSValue()!
    }

    public func toSum(units: String...) -> CSSMathSum {
        jsObject[Strings.toSum]!(units.jsValue()).fromJSValue()!
    }

    public func type() -> CSSNumericType {
        jsObject[Strings.type]!().fromJSValue()!
    }

    // XXX: illegal static override
    // override public static func parse(cssText: String) -> Self
}
