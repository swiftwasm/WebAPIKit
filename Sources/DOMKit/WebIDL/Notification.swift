// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class Notification: EventTarget {
    override public class var constructor: JSFunction { JSObject.global[Strings.Notification].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _permission = ReadonlyAttribute(jsObject: jsObject, name: Strings.permission)
        _maxActions = ReadonlyAttribute(jsObject: jsObject, name: Strings.maxActions)
        _onclick = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onclick)
        _onshow = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onshow)
        _onerror = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onerror)
        _onclose = ClosureAttribute.Optional1(jsObject: jsObject, name: Strings.onclose)
        _title = ReadonlyAttribute(jsObject: jsObject, name: Strings.title)
        _dir = ReadonlyAttribute(jsObject: jsObject, name: Strings.dir)
        _lang = ReadonlyAttribute(jsObject: jsObject, name: Strings.lang)
        _body = ReadonlyAttribute(jsObject: jsObject, name: Strings.body)
        _tag = ReadonlyAttribute(jsObject: jsObject, name: Strings.tag)
        _image = ReadonlyAttribute(jsObject: jsObject, name: Strings.image)
        _icon = ReadonlyAttribute(jsObject: jsObject, name: Strings.icon)
        _badge = ReadonlyAttribute(jsObject: jsObject, name: Strings.badge)
        _vibrate = ReadonlyAttribute(jsObject: jsObject, name: Strings.vibrate)
        _timestamp = ReadonlyAttribute(jsObject: jsObject, name: Strings.timestamp)
        _renotify = ReadonlyAttribute(jsObject: jsObject, name: Strings.renotify)
        _silent = ReadonlyAttribute(jsObject: jsObject, name: Strings.silent)
        _requireInteraction = ReadonlyAttribute(jsObject: jsObject, name: Strings.requireInteraction)
        _data = ReadonlyAttribute(jsObject: jsObject, name: Strings.data)
        _actions = ReadonlyAttribute(jsObject: jsObject, name: Strings.actions)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init(title: String, options: NotificationOptions? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(title.jsValue(), options?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var permission: NotificationPermission

    // XXX: member 'requestPermission' is ignored

    // XXX: member 'requestPermission' is ignored

    @ReadonlyAttribute
    public var maxActions: UInt32

    @ClosureAttribute.Optional1
    public var onclick: EventHandler

    @ClosureAttribute.Optional1
    public var onshow: EventHandler

    @ClosureAttribute.Optional1
    public var onerror: EventHandler

    @ClosureAttribute.Optional1
    public var onclose: EventHandler

    @ReadonlyAttribute
    public var title: String

    @ReadonlyAttribute
    public var dir: NotificationDirection

    @ReadonlyAttribute
    public var lang: String

    @ReadonlyAttribute
    public var body: String

    @ReadonlyAttribute
    public var tag: String

    @ReadonlyAttribute
    public var image: String

    @ReadonlyAttribute
    public var icon: String

    @ReadonlyAttribute
    public var badge: String

    @ReadonlyAttribute
    public var vibrate: [UInt32]

    @ReadonlyAttribute
    public var timestamp: EpochTimeStamp

    @ReadonlyAttribute
    public var renotify: Bool

    @ReadonlyAttribute
    public var silent: Bool

    @ReadonlyAttribute
    public var requireInteraction: Bool

    @ReadonlyAttribute
    public var data: JSValue

    @ReadonlyAttribute
    public var actions: [NotificationAction]

    public func close() {
        _ = jsObject[Strings.close]!()
    }
}
