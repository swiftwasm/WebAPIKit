// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol WindowEventHandlers: JSBridgedClass {}
public extension WindowEventHandlers {
    var onafterprint: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onafterprint, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onafterprint, in: jsObject] = newValue }
    }

    var onbeforeprint: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onbeforeprint, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onbeforeprint, in: jsObject] = newValue }
    }

    var onbeforeunload: OnBeforeUnloadEventHandler {
        get { ClosureAttribute.Optional1[Strings.onbeforeunload, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onbeforeunload, in: jsObject] = newValue }
    }

    var onhashchange: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onhashchange, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onhashchange, in: jsObject] = newValue }
    }

    var onlanguagechange: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onlanguagechange, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onlanguagechange, in: jsObject] = newValue }
    }

    var onmessage: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onmessage, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onmessage, in: jsObject] = newValue }
    }

    var onmessageerror: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onmessageerror, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onmessageerror, in: jsObject] = newValue }
    }

    var onoffline: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onoffline, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onoffline, in: jsObject] = newValue }
    }

    var ononline: EventHandler {
        get { ClosureAttribute.Optional1[Strings.ononline, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.ononline, in: jsObject] = newValue }
    }

    var onpagehide: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onpagehide, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onpagehide, in: jsObject] = newValue }
    }

    var onpageshow: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onpageshow, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onpageshow, in: jsObject] = newValue }
    }

    var onpopstate: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onpopstate, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onpopstate, in: jsObject] = newValue }
    }

    var onrejectionhandled: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onrejectionhandled, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onrejectionhandled, in: jsObject] = newValue }
    }

    var onstorage: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onstorage, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onstorage, in: jsObject] = newValue }
    }

    var onunhandledrejection: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onunhandledrejection, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onunhandledrejection, in: jsObject] = newValue }
    }

    var onunload: EventHandler {
        get { ClosureAttribute.Optional1[Strings.onunload, in: jsObject] }
        set { ClosureAttribute.Optional1[Strings.onunload, in: jsObject] = newValue }
    }
}
