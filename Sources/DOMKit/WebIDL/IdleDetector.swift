// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class IdleDetector: EventTarget {
    override public class var constructor: JSFunction { JSObject.global[Strings.IdleDetector].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _userState = ReadonlyAttribute(jsObject: jsObject, name: Strings.userState)
        _screenState = ReadonlyAttribute(jsObject: jsObject, name: Strings.screenState)
        _onchange = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onchange)
        super.init(unsafelyWrapping: jsObject)
    }

    public convenience init() {
        self.init(unsafelyWrapping: Self.constructor.new(arguments: []))
    }

    @ReadonlyAttribute
    public var userState: UserIdleState?

    @ReadonlyAttribute
    public var screenState: ScreenIdleState?

    @ClosureAttribute1Optional
    public var onchange: EventHandler

    public static func requestPermission() -> JSPromise {
        let this = constructor
        return this[Strings.requestPermission].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public static func requestPermission() async throws -> PermissionState {
        let this = constructor
        let _promise: JSPromise = this[Strings.requestPermission].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func start(options: IdleOptions? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.start].function!(this: this, arguments: [options?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func start(options: IdleOptions? = nil) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.start].function!(this: this, arguments: [options?.jsValue() ?? .undefined]).fromJSValue()!
        _ = try await _promise.get()
    }
}
