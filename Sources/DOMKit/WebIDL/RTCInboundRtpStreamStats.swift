// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class RTCInboundRtpStreamStats: BridgedDictionary {
    public convenience init(receiverId: String, remoteId: String, framesDecoded: UInt32, keyFramesDecoded: UInt32, frameWidth: UInt32, frameHeight: UInt32, frameBitDepth: UInt32, framesPerSecond: Double, qpSum: UInt64, totalDecodeTime: Double, totalInterFrameDelay: Double, totalSquaredInterFrameDelay: Double, voiceActivityFlag: Bool, lastPacketReceivedTimestamp: DOMHighResTimeStamp, averageRtcpInterval: Double, headerBytesReceived: UInt64, fecPacketsReceived: UInt64, fecPacketsDiscarded: UInt64, bytesReceived: UInt64, packetsFailedDecryption: UInt64, packetsDuplicated: UInt64, perDscpPacketsReceived: [String: UInt64], nackCount: UInt32, firCount: UInt32, pliCount: UInt32, sliCount: UInt32, totalProcessingDelay: Double, estimatedPlayoutTimestamp: DOMHighResTimeStamp, jitterBufferDelay: Double, jitterBufferEmittedCount: UInt64, totalSamplesReceived: UInt64, totalSamplesDecoded: UInt64, samplesDecodedWithSilk: UInt64, samplesDecodedWithCelt: UInt64, concealedSamples: UInt64, silentConcealedSamples: UInt64, concealmentEvents: UInt64, insertedSamplesForDeceleration: UInt64, removedSamplesForAcceleration: UInt64, audioLevel: Double, totalAudioEnergy: Double, totalSamplesDuration: Double, framesReceived: UInt32, decoderImplementation: String) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.receiverId] = receiverId.jsValue()
        object[Strings.remoteId] = remoteId.jsValue()
        object[Strings.framesDecoded] = framesDecoded.jsValue()
        object[Strings.keyFramesDecoded] = keyFramesDecoded.jsValue()
        object[Strings.frameWidth] = frameWidth.jsValue()
        object[Strings.frameHeight] = frameHeight.jsValue()
        object[Strings.frameBitDepth] = frameBitDepth.jsValue()
        object[Strings.framesPerSecond] = framesPerSecond.jsValue()
        object[Strings.qpSum] = qpSum.jsValue()
        object[Strings.totalDecodeTime] = totalDecodeTime.jsValue()
        object[Strings.totalInterFrameDelay] = totalInterFrameDelay.jsValue()
        object[Strings.totalSquaredInterFrameDelay] = totalSquaredInterFrameDelay.jsValue()
        object[Strings.voiceActivityFlag] = voiceActivityFlag.jsValue()
        object[Strings.lastPacketReceivedTimestamp] = lastPacketReceivedTimestamp.jsValue()
        object[Strings.averageRtcpInterval] = averageRtcpInterval.jsValue()
        object[Strings.headerBytesReceived] = headerBytesReceived.jsValue()
        object[Strings.fecPacketsReceived] = fecPacketsReceived.jsValue()
        object[Strings.fecPacketsDiscarded] = fecPacketsDiscarded.jsValue()
        object[Strings.bytesReceived] = bytesReceived.jsValue()
        object[Strings.packetsFailedDecryption] = packetsFailedDecryption.jsValue()
        object[Strings.packetsDuplicated] = packetsDuplicated.jsValue()
        object[Strings.perDscpPacketsReceived] = perDscpPacketsReceived.jsValue()
        object[Strings.nackCount] = nackCount.jsValue()
        object[Strings.firCount] = firCount.jsValue()
        object[Strings.pliCount] = pliCount.jsValue()
        object[Strings.sliCount] = sliCount.jsValue()
        object[Strings.totalProcessingDelay] = totalProcessingDelay.jsValue()
        object[Strings.estimatedPlayoutTimestamp] = estimatedPlayoutTimestamp.jsValue()
        object[Strings.jitterBufferDelay] = jitterBufferDelay.jsValue()
        object[Strings.jitterBufferEmittedCount] = jitterBufferEmittedCount.jsValue()
        object[Strings.totalSamplesReceived] = totalSamplesReceived.jsValue()
        object[Strings.totalSamplesDecoded] = totalSamplesDecoded.jsValue()
        object[Strings.samplesDecodedWithSilk] = samplesDecodedWithSilk.jsValue()
        object[Strings.samplesDecodedWithCelt] = samplesDecodedWithCelt.jsValue()
        object[Strings.concealedSamples] = concealedSamples.jsValue()
        object[Strings.silentConcealedSamples] = silentConcealedSamples.jsValue()
        object[Strings.concealmentEvents] = concealmentEvents.jsValue()
        object[Strings.insertedSamplesForDeceleration] = insertedSamplesForDeceleration.jsValue()
        object[Strings.removedSamplesForAcceleration] = removedSamplesForAcceleration.jsValue()
        object[Strings.audioLevel] = audioLevel.jsValue()
        object[Strings.totalAudioEnergy] = totalAudioEnergy.jsValue()
        object[Strings.totalSamplesDuration] = totalSamplesDuration.jsValue()
        object[Strings.framesReceived] = framesReceived.jsValue()
        object[Strings.decoderImplementation] = decoderImplementation.jsValue()
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _receiverId = ReadWriteAttribute(jsObject: object, name: Strings.receiverId)
        _remoteId = ReadWriteAttribute(jsObject: object, name: Strings.remoteId)
        _framesDecoded = ReadWriteAttribute(jsObject: object, name: Strings.framesDecoded)
        _keyFramesDecoded = ReadWriteAttribute(jsObject: object, name: Strings.keyFramesDecoded)
        _frameWidth = ReadWriteAttribute(jsObject: object, name: Strings.frameWidth)
        _frameHeight = ReadWriteAttribute(jsObject: object, name: Strings.frameHeight)
        _frameBitDepth = ReadWriteAttribute(jsObject: object, name: Strings.frameBitDepth)
        _framesPerSecond = ReadWriteAttribute(jsObject: object, name: Strings.framesPerSecond)
        _qpSum = ReadWriteAttribute(jsObject: object, name: Strings.qpSum)
        _totalDecodeTime = ReadWriteAttribute(jsObject: object, name: Strings.totalDecodeTime)
        _totalInterFrameDelay = ReadWriteAttribute(jsObject: object, name: Strings.totalInterFrameDelay)
        _totalSquaredInterFrameDelay = ReadWriteAttribute(jsObject: object, name: Strings.totalSquaredInterFrameDelay)
        _voiceActivityFlag = ReadWriteAttribute(jsObject: object, name: Strings.voiceActivityFlag)
        _lastPacketReceivedTimestamp = ReadWriteAttribute(jsObject: object, name: Strings.lastPacketReceivedTimestamp)
        _averageRtcpInterval = ReadWriteAttribute(jsObject: object, name: Strings.averageRtcpInterval)
        _headerBytesReceived = ReadWriteAttribute(jsObject: object, name: Strings.headerBytesReceived)
        _fecPacketsReceived = ReadWriteAttribute(jsObject: object, name: Strings.fecPacketsReceived)
        _fecPacketsDiscarded = ReadWriteAttribute(jsObject: object, name: Strings.fecPacketsDiscarded)
        _bytesReceived = ReadWriteAttribute(jsObject: object, name: Strings.bytesReceived)
        _packetsFailedDecryption = ReadWriteAttribute(jsObject: object, name: Strings.packetsFailedDecryption)
        _packetsDuplicated = ReadWriteAttribute(jsObject: object, name: Strings.packetsDuplicated)
        _perDscpPacketsReceived = ReadWriteAttribute(jsObject: object, name: Strings.perDscpPacketsReceived)
        _nackCount = ReadWriteAttribute(jsObject: object, name: Strings.nackCount)
        _firCount = ReadWriteAttribute(jsObject: object, name: Strings.firCount)
        _pliCount = ReadWriteAttribute(jsObject: object, name: Strings.pliCount)
        _sliCount = ReadWriteAttribute(jsObject: object, name: Strings.sliCount)
        _totalProcessingDelay = ReadWriteAttribute(jsObject: object, name: Strings.totalProcessingDelay)
        _estimatedPlayoutTimestamp = ReadWriteAttribute(jsObject: object, name: Strings.estimatedPlayoutTimestamp)
        _jitterBufferDelay = ReadWriteAttribute(jsObject: object, name: Strings.jitterBufferDelay)
        _jitterBufferEmittedCount = ReadWriteAttribute(jsObject: object, name: Strings.jitterBufferEmittedCount)
        _totalSamplesReceived = ReadWriteAttribute(jsObject: object, name: Strings.totalSamplesReceived)
        _totalSamplesDecoded = ReadWriteAttribute(jsObject: object, name: Strings.totalSamplesDecoded)
        _samplesDecodedWithSilk = ReadWriteAttribute(jsObject: object, name: Strings.samplesDecodedWithSilk)
        _samplesDecodedWithCelt = ReadWriteAttribute(jsObject: object, name: Strings.samplesDecodedWithCelt)
        _concealedSamples = ReadWriteAttribute(jsObject: object, name: Strings.concealedSamples)
        _silentConcealedSamples = ReadWriteAttribute(jsObject: object, name: Strings.silentConcealedSamples)
        _concealmentEvents = ReadWriteAttribute(jsObject: object, name: Strings.concealmentEvents)
        _insertedSamplesForDeceleration = ReadWriteAttribute(jsObject: object, name: Strings.insertedSamplesForDeceleration)
        _removedSamplesForAcceleration = ReadWriteAttribute(jsObject: object, name: Strings.removedSamplesForAcceleration)
        _audioLevel = ReadWriteAttribute(jsObject: object, name: Strings.audioLevel)
        _totalAudioEnergy = ReadWriteAttribute(jsObject: object, name: Strings.totalAudioEnergy)
        _totalSamplesDuration = ReadWriteAttribute(jsObject: object, name: Strings.totalSamplesDuration)
        _framesReceived = ReadWriteAttribute(jsObject: object, name: Strings.framesReceived)
        _decoderImplementation = ReadWriteAttribute(jsObject: object, name: Strings.decoderImplementation)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var receiverId: String

    @ReadWriteAttribute
    public var remoteId: String

    @ReadWriteAttribute
    public var framesDecoded: UInt32

    @ReadWriteAttribute
    public var keyFramesDecoded: UInt32

    @ReadWriteAttribute
    public var frameWidth: UInt32

    @ReadWriteAttribute
    public var frameHeight: UInt32

    @ReadWriteAttribute
    public var frameBitDepth: UInt32

    @ReadWriteAttribute
    public var framesPerSecond: Double

    @ReadWriteAttribute
    public var qpSum: UInt64

    @ReadWriteAttribute
    public var totalDecodeTime: Double

    @ReadWriteAttribute
    public var totalInterFrameDelay: Double

    @ReadWriteAttribute
    public var totalSquaredInterFrameDelay: Double

    @ReadWriteAttribute
    public var voiceActivityFlag: Bool

    @ReadWriteAttribute
    public var lastPacketReceivedTimestamp: DOMHighResTimeStamp

    @ReadWriteAttribute
    public var averageRtcpInterval: Double

    @ReadWriteAttribute
    public var headerBytesReceived: UInt64

    @ReadWriteAttribute
    public var fecPacketsReceived: UInt64

    @ReadWriteAttribute
    public var fecPacketsDiscarded: UInt64

    @ReadWriteAttribute
    public var bytesReceived: UInt64

    @ReadWriteAttribute
    public var packetsFailedDecryption: UInt64

    @ReadWriteAttribute
    public var packetsDuplicated: UInt64

    @ReadWriteAttribute
    public var perDscpPacketsReceived: [String: UInt64]

    @ReadWriteAttribute
    public var nackCount: UInt32

    @ReadWriteAttribute
    public var firCount: UInt32

    @ReadWriteAttribute
    public var pliCount: UInt32

    @ReadWriteAttribute
    public var sliCount: UInt32

    @ReadWriteAttribute
    public var totalProcessingDelay: Double

    @ReadWriteAttribute
    public var estimatedPlayoutTimestamp: DOMHighResTimeStamp

    @ReadWriteAttribute
    public var jitterBufferDelay: Double

    @ReadWriteAttribute
    public var jitterBufferEmittedCount: UInt64

    @ReadWriteAttribute
    public var totalSamplesReceived: UInt64

    @ReadWriteAttribute
    public var totalSamplesDecoded: UInt64

    @ReadWriteAttribute
    public var samplesDecodedWithSilk: UInt64

    @ReadWriteAttribute
    public var samplesDecodedWithCelt: UInt64

    @ReadWriteAttribute
    public var concealedSamples: UInt64

    @ReadWriteAttribute
    public var silentConcealedSamples: UInt64

    @ReadWriteAttribute
    public var concealmentEvents: UInt64

    @ReadWriteAttribute
    public var insertedSamplesForDeceleration: UInt64

    @ReadWriteAttribute
    public var removedSamplesForAcceleration: UInt64

    @ReadWriteAttribute
    public var audioLevel: Double

    @ReadWriteAttribute
    public var totalAudioEnergy: Double

    @ReadWriteAttribute
    public var totalSamplesDuration: Double

    @ReadWriteAttribute
    public var framesReceived: UInt32

    @ReadWriteAttribute
    public var decoderImplementation: String
}
