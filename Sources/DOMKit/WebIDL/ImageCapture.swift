// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class ImageCapture: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.ImageCapture].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _track = ReadonlyAttribute(jsObject: jsObject, name: Strings.track)
        self.jsObject = jsObject
    }

    public convenience init(videoTrack: MediaStreamTrack) {
        self.init(unsafelyWrapping: Self.constructor.new(videoTrack.jsValue()))
    }

    public func takePhoto(photoSettings: PhotoSettings? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.takePhoto].function!(this: this, arguments: [photoSettings?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func takePhoto(photoSettings: PhotoSettings? = nil) async throws -> Blob {
        let this = jsObject
        let _promise: JSPromise = this[Strings.takePhoto].function!(this: this, arguments: [photoSettings?.jsValue() ?? .undefined]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func getPhotoCapabilities() -> JSPromise {
        let this = jsObject
        return this[Strings.getPhotoCapabilities].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getPhotoCapabilities() async throws -> PhotoCapabilities {
        let this = jsObject
        let _promise: JSPromise = this[Strings.getPhotoCapabilities].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func getPhotoSettings() -> JSPromise {
        let this = jsObject
        return this[Strings.getPhotoSettings].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getPhotoSettings() async throws -> PhotoSettings {
        let this = jsObject
        let _promise: JSPromise = this[Strings.getPhotoSettings].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func grabFrame() -> JSPromise {
        let this = jsObject
        return this[Strings.grabFrame].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func grabFrame() async throws -> ImageBitmap {
        let this = jsObject
        let _promise: JSPromise = this[Strings.grabFrame].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @ReadonlyAttribute
    public var track: MediaStreamTrack
}
