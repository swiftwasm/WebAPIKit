// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_Float32List: ConvertibleToJSValue {}
extension Float32Array: Any_Float32List {}
extension Array: Any_Float32List where Element == GLfloat {}

public enum Float32List: JSValueCompatible, Any_Float32List {
    case float32Array(Float32Array)
    case seq_of_GLfloat([GLfloat])

    var float32Array: Float32Array? {
        switch self {
        case let .float32Array(float32Array): return float32Array
        default: return nil
        }
    }

    var seq_of_GLfloat: [GLfloat]? {
        switch self {
        case let .seq_of_GLfloat(seq_of_GLfloat): return seq_of_GLfloat
        default: return nil
        }
    }

    public static func construct(from value: JSValue) -> Self? {
        if let float32Array: Float32Array = value.fromJSValue() {
            return .float32Array(float32Array)
        }
        if let seq_of_GLfloat: [GLfloat] = value.fromJSValue() {
            return .seq_of_GLfloat(seq_of_GLfloat)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .float32Array(float32Array):
            return float32Array.jsValue
        case let .seq_of_GLfloat(seq_of_GLfloat):
            return seq_of_GLfloat.jsValue
        }
    }
}
