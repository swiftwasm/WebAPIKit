// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol CanvasTextDrawingStyles: JSBridgedClass {}
public extension CanvasTextDrawingStyles {
    var font: String {
        get { ReadWriteAttribute[Strings.font, in: jsObject] }
        set { ReadWriteAttribute[Strings.font, in: jsObject] = newValue }
    }

    var textAlign: CanvasTextAlign {
        get { ReadWriteAttribute[Strings.textAlign, in: jsObject] }
        set { ReadWriteAttribute[Strings.textAlign, in: jsObject] = newValue }
    }

    var textBaseline: CanvasTextBaseline {
        get { ReadWriteAttribute[Strings.textBaseline, in: jsObject] }
        set { ReadWriteAttribute[Strings.textBaseline, in: jsObject] = newValue }
    }

    var direction: CanvasDirection {
        get { ReadWriteAttribute[Strings.direction, in: jsObject] }
        set { ReadWriteAttribute[Strings.direction, in: jsObject] = newValue }
    }

    var letterSpacing: String {
        get { ReadWriteAttribute[Strings.letterSpacing, in: jsObject] }
        set { ReadWriteAttribute[Strings.letterSpacing, in: jsObject] = newValue }
    }

    var fontKerning: CanvasFontKerning {
        get { ReadWriteAttribute[Strings.fontKerning, in: jsObject] }
        set { ReadWriteAttribute[Strings.fontKerning, in: jsObject] = newValue }
    }

    var fontStretch: CanvasFontStretch {
        get { ReadWriteAttribute[Strings.fontStretch, in: jsObject] }
        set { ReadWriteAttribute[Strings.fontStretch, in: jsObject] = newValue }
    }

    var fontVariantCaps: CanvasFontVariantCaps {
        get { ReadWriteAttribute[Strings.fontVariantCaps, in: jsObject] }
        set { ReadWriteAttribute[Strings.fontVariantCaps, in: jsObject] = newValue }
    }

    var textRendering: CanvasTextRendering {
        get { ReadWriteAttribute[Strings.textRendering, in: jsObject] }
        set { ReadWriteAttribute[Strings.textRendering, in: jsObject] = newValue }
    }

    var wordSpacing: String {
        get { ReadWriteAttribute[Strings.wordSpacing, in: jsObject] }
        set { ReadWriteAttribute[Strings.wordSpacing, in: jsObject] = newValue }
    }
}
