// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class Event: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.Event.function! }

    private enum Keys {
        static let AT_TARGET: JSString = "AT_TARGET"
        static let BUBBLING_PHASE: JSString = "BUBBLING_PHASE"
        static let CAPTURING_PHASE: JSString = "CAPTURING_PHASE"
        static let NONE: JSString = "NONE"
        static let bubbles: JSString = "bubbles"
        static let cancelBubble: JSString = "cancelBubble"
        static let cancelable: JSString = "cancelable"
        static let composed: JSString = "composed"
        static let composedPath: JSString = "composedPath"
        static let currentTarget: JSString = "currentTarget"
        static let defaultPrevented: JSString = "defaultPrevented"
        static let eventPhase: JSString = "eventPhase"
        static let initEvent: JSString = "initEvent"
        static let isTrusted: JSString = "isTrusted"
        static let preventDefault: JSString = "preventDefault"
        static let returnValue: JSString = "returnValue"
        static let srcElement: JSString = "srcElement"
        static let stopImmediatePropagation: JSString = "stopImmediatePropagation"
        static let stopPropagation: JSString = "stopPropagation"
        static let target: JSString = "target"
        static let timeStamp: JSString = "timeStamp"
        static let type: JSString = "type"
    }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        _type = ReadonlyAttribute(jsObject: jsObject, name: Keys.type)
        _target = ReadonlyAttribute(jsObject: jsObject, name: Keys.target)
        _srcElement = ReadonlyAttribute(jsObject: jsObject, name: Keys.srcElement)
        _currentTarget = ReadonlyAttribute(jsObject: jsObject, name: Keys.currentTarget)
        _eventPhase = ReadonlyAttribute(jsObject: jsObject, name: Keys.eventPhase)
        _cancelBubble = ReadWriteAttribute(jsObject: jsObject, name: Keys.cancelBubble)
        _bubbles = ReadonlyAttribute(jsObject: jsObject, name: Keys.bubbles)
        _cancelable = ReadonlyAttribute(jsObject: jsObject, name: Keys.cancelable)
        _returnValue = ReadWriteAttribute(jsObject: jsObject, name: Keys.returnValue)
        _defaultPrevented = ReadonlyAttribute(jsObject: jsObject, name: Keys.defaultPrevented)
        _composed = ReadonlyAttribute(jsObject: jsObject, name: Keys.composed)
        _isTrusted = ReadonlyAttribute(jsObject: jsObject, name: Keys.isTrusted)
        _timeStamp = ReadonlyAttribute(jsObject: jsObject, name: Keys.timeStamp)
        self.jsObject = jsObject
    }

    public convenience init(type: String, eventInitDict: EventInit? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(type.jsValue(), eventInitDict?.jsValue() ?? .undefined))
    }

    @ReadonlyAttribute
    public var type: String

    @ReadonlyAttribute
    public var target: EventTarget?

    @ReadonlyAttribute
    public var srcElement: EventTarget?

    @ReadonlyAttribute
    public var currentTarget: EventTarget?

    public func composedPath() -> [EventTarget] {
        jsObject[Keys.composedPath]!().fromJSValue()!
    }

    public static let NONE: UInt16 = 0

    public static let CAPTURING_PHASE: UInt16 = 1

    public static let AT_TARGET: UInt16 = 2

    public static let BUBBLING_PHASE: UInt16 = 3

    @ReadonlyAttribute
    public var eventPhase: UInt16

    public func stopPropagation() {
        jsObject[Keys.stopPropagation]!().fromJSValue()!
    }

    @ReadWriteAttribute
    public var cancelBubble: Bool

    public func stopImmediatePropagation() {
        jsObject[Keys.stopImmediatePropagation]!().fromJSValue()!
    }

    @ReadonlyAttribute
    public var bubbles: Bool

    @ReadonlyAttribute
    public var cancelable: Bool

    @ReadWriteAttribute
    public var returnValue: Bool

    public func preventDefault() {
        jsObject[Keys.preventDefault]!().fromJSValue()!
    }

    @ReadonlyAttribute
    public var defaultPrevented: Bool

    @ReadonlyAttribute
    public var composed: Bool

    @ReadonlyAttribute
    public var isTrusted: Bool

    @ReadonlyAttribute
    public var timeStamp: DOMHighResTimeStamp

    public func initEvent(type: String, bubbles: Bool? = nil, cancelable: Bool? = nil) {
        jsObject[Keys.initEvent]!(type.jsValue(), bubbles?.jsValue() ?? .undefined, cancelable?.jsValue() ?? .undefined).fromJSValue()!
    }
}
