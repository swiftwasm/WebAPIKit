// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class ScreenOrientation: EventTarget {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.ScreenOrientation].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _type = ReadonlyAttribute(jsObject: jsObject, name: Strings.type)
        _angle = ReadonlyAttribute(jsObject: jsObject, name: Strings.angle)
        _onchange = ClosureAttribute1Optional(jsObject: jsObject, name: Strings.onchange)
        super.init(unsafelyWrapping: jsObject)
    }

    @inlinable public func lock(orientation: OrientationLockType) -> JSPromise {
        let this = jsObject
        return this[Strings.lock].function!(this: this, arguments: [orientation.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func lock(orientation: OrientationLockType) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.lock].function!(this: this, arguments: [orientation.jsValue()]).fromJSValue()!
        _ = try await _promise.get()
    }

    @inlinable public func unlock() {
        let this = jsObject
        _ = this[Strings.unlock].function!(this: this, arguments: [])
    }

    @ReadonlyAttribute
    public var type: OrientationType

    @ReadonlyAttribute
    public var angle: UInt16

    @ClosureAttribute1Optional
    public var onchange: EventHandler
}
