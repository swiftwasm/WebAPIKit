// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class DigitalGoodsService: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global[Strings.DigitalGoodsService].function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        self.jsObject = jsObject
    }

    public func getDetails(itemIds: [String]) -> JSPromise {
        jsObject[Strings.getDetails]!(itemIds.jsValue()).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getDetails(itemIds: [String]) async throws -> [ItemDetails] {
        let _promise: JSPromise = jsObject[Strings.getDetails]!(itemIds.jsValue()).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func listPurchases() -> JSPromise {
        jsObject[Strings.listPurchases]!().fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func listPurchases() async throws -> [PurchaseDetails] {
        let _promise: JSPromise = jsObject[Strings.listPurchases]!().fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func listPurchaseHistory() -> JSPromise {
        jsObject[Strings.listPurchaseHistory]!().fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func listPurchaseHistory() async throws -> [PurchaseDetails] {
        let _promise: JSPromise = jsObject[Strings.listPurchaseHistory]!().fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func consume(purchaseToken: String) -> JSPromise {
        jsObject[Strings.consume]!(purchaseToken.jsValue()).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func consume(purchaseToken: String) async throws {
        let _promise: JSPromise = jsObject[Strings.consume]!(purchaseToken.jsValue()).fromJSValue()!
        _ = try await _promise.get()
    }
}
