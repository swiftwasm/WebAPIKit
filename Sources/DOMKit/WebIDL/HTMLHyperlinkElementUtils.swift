// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol HTMLHyperlinkElementUtils: JSBridgedClass {}
public extension HTMLHyperlinkElementUtils {
    @inlinable var href: String {
        get { ReadWriteAttribute[Strings.href, in: jsObject] }
        set { ReadWriteAttribute[Strings.href, in: jsObject] = newValue }
    }

    @inlinable var origin: String { ReadonlyAttribute[Strings.origin, in: jsObject] }

    @inlinable var `protocol`: String {
        get { ReadWriteAttribute[Strings.protocol, in: jsObject] }
        set { ReadWriteAttribute[Strings.protocol, in: jsObject] = newValue }
    }

    @inlinable var username: String {
        get { ReadWriteAttribute[Strings.username, in: jsObject] }
        set { ReadWriteAttribute[Strings.username, in: jsObject] = newValue }
    }

    @inlinable var password: String {
        get { ReadWriteAttribute[Strings.password, in: jsObject] }
        set { ReadWriteAttribute[Strings.password, in: jsObject] = newValue }
    }

    @inlinable var host: String {
        get { ReadWriteAttribute[Strings.host, in: jsObject] }
        set { ReadWriteAttribute[Strings.host, in: jsObject] = newValue }
    }

    @inlinable var hostname: String {
        get { ReadWriteAttribute[Strings.hostname, in: jsObject] }
        set { ReadWriteAttribute[Strings.hostname, in: jsObject] = newValue }
    }

    @inlinable var port: String {
        get { ReadWriteAttribute[Strings.port, in: jsObject] }
        set { ReadWriteAttribute[Strings.port, in: jsObject] = newValue }
    }

    @inlinable var pathname: String {
        get { ReadWriteAttribute[Strings.pathname, in: jsObject] }
        set { ReadWriteAttribute[Strings.pathname, in: jsObject] = newValue }
    }

    @inlinable var search: String {
        get { ReadWriteAttribute[Strings.search, in: jsObject] }
        set { ReadWriteAttribute[Strings.search, in: jsObject] = newValue }
    }

    @inlinable var hash: String {
        get { ReadWriteAttribute[Strings.hash, in: jsObject] }
        set { ReadWriteAttribute[Strings.hash, in: jsObject] = newValue }
    }
}
