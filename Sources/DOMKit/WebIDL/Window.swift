// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class Window: EventTarget, GlobalEventHandlers, WindowEventHandlers, WindowOrWorkerGlobalScope, AnimationFrameProvider, WindowSessionStorage, WindowLocalStorage {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.Window].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _event = ReadonlyAttribute(jsObject: jsObject, name: Strings.event)
        _window = ReadonlyAttribute(jsObject: jsObject, name: Strings.window)
        _self = ReadonlyAttribute(jsObject: jsObject, name: Strings._self)
        _document = ReadonlyAttribute(jsObject: jsObject, name: Strings.document)
        _name = ReadWriteAttribute(jsObject: jsObject, name: Strings.name)
        _location = ReadonlyAttribute(jsObject: jsObject, name: Strings.location)
        _history = ReadonlyAttribute(jsObject: jsObject, name: Strings.history)
        _customElements = ReadonlyAttribute(jsObject: jsObject, name: Strings.customElements)
        _locationbar = ReadonlyAttribute(jsObject: jsObject, name: Strings.locationbar)
        _menubar = ReadonlyAttribute(jsObject: jsObject, name: Strings.menubar)
        _personalbar = ReadonlyAttribute(jsObject: jsObject, name: Strings.personalbar)
        _scrollbars = ReadonlyAttribute(jsObject: jsObject, name: Strings.scrollbars)
        _statusbar = ReadonlyAttribute(jsObject: jsObject, name: Strings.statusbar)
        _toolbar = ReadonlyAttribute(jsObject: jsObject, name: Strings.toolbar)
        _status = ReadWriteAttribute(jsObject: jsObject, name: Strings.status)
        _closed = ReadonlyAttribute(jsObject: jsObject, name: Strings.closed)
        _frames = ReadonlyAttribute(jsObject: jsObject, name: Strings.frames)
        _length = ReadonlyAttribute(jsObject: jsObject, name: Strings.length)
        _top = ReadonlyAttribute(jsObject: jsObject, name: Strings.top)
        _opener = ReadWriteAttribute(jsObject: jsObject, name: Strings.opener)
        _parent = ReadonlyAttribute(jsObject: jsObject, name: Strings.parent)
        _frameElement = ReadonlyAttribute(jsObject: jsObject, name: Strings.frameElement)
        _navigator = ReadonlyAttribute(jsObject: jsObject, name: Strings.navigator)
        _clientInformation = ReadonlyAttribute(jsObject: jsObject, name: Strings.clientInformation)
        _originAgentCluster = ReadonlyAttribute(jsObject: jsObject, name: Strings.originAgentCluster)
        _external = ReadonlyAttribute(jsObject: jsObject, name: Strings.external)
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadonlyAttribute
    public var event: Event?

    @ReadonlyAttribute
    public var window: WindowProxy

    @ReadonlyAttribute
    public var `self`: WindowProxy

    @ReadonlyAttribute
    public var document: Document

    @ReadWriteAttribute
    public var name: String

    @ReadonlyAttribute
    public var location: Location

    @ReadonlyAttribute
    public var history: History

    @ReadonlyAttribute
    public var customElements: CustomElementRegistry

    @ReadonlyAttribute
    public var locationbar: BarProp

    @ReadonlyAttribute
    public var menubar: BarProp

    @ReadonlyAttribute
    public var personalbar: BarProp

    @ReadonlyAttribute
    public var scrollbars: BarProp

    @ReadonlyAttribute
    public var statusbar: BarProp

    @ReadonlyAttribute
    public var toolbar: BarProp

    @ReadWriteAttribute
    public var status: String

    @inlinable public func close() {
        let this = jsObject
        _ = this[Strings.close].function!(this: this, arguments: [])
    }

    @ReadonlyAttribute
    public var closed: Bool

    @inlinable public func stop() {
        let this = jsObject
        _ = this[Strings.stop].function!(this: this, arguments: [])
    }

    @inlinable public func focus() {
        let this = jsObject
        _ = this[Strings.focus].function!(this: this, arguments: [])
    }

    @inlinable public func blur() {
        let this = jsObject
        _ = this[Strings.blur].function!(this: this, arguments: [])
    }

    @ReadonlyAttribute
    public var frames: WindowProxy

    @ReadonlyAttribute
    public var length: UInt32

    @ReadonlyAttribute
    public var top: WindowProxy?

    @ReadWriteAttribute
    public var opener: JSValue

    @ReadonlyAttribute
    public var parent: WindowProxy?

    @ReadonlyAttribute
    public var frameElement: Element?

    @inlinable public func open(url: String? = nil, target: String? = nil, features: String? = nil) -> WindowProxy? {
        let this = jsObject
        return this[Strings.open].function!(this: this, arguments: [url?.jsValue ?? .undefined, target?.jsValue ?? .undefined, features?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public subscript(key: String) -> JSObject {
        jsObject[key].fromJSValue()!
    }

    @ReadonlyAttribute
    public var navigator: Navigator

    @ReadonlyAttribute
    public var clientInformation: Navigator

    @ReadonlyAttribute
    public var originAgentCluster: Bool

    @inlinable public func alert() {
        let this = jsObject
        _ = this[Strings.alert].function!(this: this, arguments: [])
    }

    @inlinable public func alert(message: String) {
        let this = jsObject
        _ = this[Strings.alert].function!(this: this, arguments: [message.jsValue])
    }

    @inlinable public func confirm(message: String? = nil) -> Bool {
        let this = jsObject
        return this[Strings.confirm].function!(this: this, arguments: [message?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func prompt(message: String? = nil, default: String? = nil) -> String? {
        let this = jsObject
        return this[Strings.prompt].function!(this: this, arguments: [message?.jsValue ?? .undefined, `default`?.jsValue ?? .undefined]).fromJSValue()!
    }

    @inlinable public func print() {
        let this = jsObject
        _ = this[Strings.print].function!(this: this, arguments: [])
    }

    @inlinable public func postMessage(message: JSValue, targetOrigin: String, transfer: [JSObject]? = nil) {
        let this = jsObject
        _ = this[Strings.postMessage].function!(this: this, arguments: [message.jsValue, targetOrigin.jsValue, transfer?.jsValue ?? .undefined])
    }

    @inlinable public func postMessage(message: JSValue, options: WindowPostMessageOptions? = nil) {
        let this = jsObject
        _ = this[Strings.postMessage].function!(this: this, arguments: [message.jsValue, options?.jsValue ?? .undefined])
    }

    @inlinable public func captureEvents() {
        let this = jsObject
        _ = this[Strings.captureEvents].function!(this: this, arguments: [])
    }

    @inlinable public func releaseEvents() {
        let this = jsObject
        _ = this[Strings.releaseEvents].function!(this: this, arguments: [])
    }

    @ReadonlyAttribute
    public var external: External
}
