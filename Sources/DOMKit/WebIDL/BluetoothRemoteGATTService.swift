// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class BluetoothRemoteGATTService: EventTarget, CharacteristicEventHandlers, ServiceEventHandlers {
    override public class var constructor: JSFunction { JSObject.global[Strings.BluetoothRemoteGATTService].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _device = ReadonlyAttribute(jsObject: jsObject, name: Strings.device)
        _uuid = ReadonlyAttribute(jsObject: jsObject, name: Strings.uuid)
        _isPrimary = ReadonlyAttribute(jsObject: jsObject, name: Strings.isPrimary)
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadonlyAttribute
    public var device: BluetoothDevice

    @ReadonlyAttribute
    public var uuid: UUID

    @ReadonlyAttribute
    public var isPrimary: Bool

    public func getCharacteristic(characteristic: BluetoothCharacteristicUUID) -> JSPromise {
        jsObject[Strings.getCharacteristic]!(characteristic.jsValue()).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getCharacteristic(characteristic: BluetoothCharacteristicUUID) async throws -> BluetoothRemoteGATTCharacteristic {
        let _promise: JSPromise = jsObject[Strings.getCharacteristic]!(characteristic.jsValue()).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func getCharacteristics(characteristic: BluetoothCharacteristicUUID? = nil) -> JSPromise {
        jsObject[Strings.getCharacteristics]!(characteristic?.jsValue() ?? .undefined).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getCharacteristics(characteristic: BluetoothCharacteristicUUID? = nil) async throws -> [BluetoothRemoteGATTCharacteristic] {
        let _promise: JSPromise = jsObject[Strings.getCharacteristics]!(characteristic?.jsValue() ?? .undefined).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func getIncludedService(service: BluetoothServiceUUID) -> JSPromise {
        jsObject[Strings.getIncludedService]!(service.jsValue()).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getIncludedService(service: BluetoothServiceUUID) async throws -> BluetoothRemoteGATTService {
        let _promise: JSPromise = jsObject[Strings.getIncludedService]!(service.jsValue()).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    public func getIncludedServices(service: BluetoothServiceUUID? = nil) -> JSPromise {
        jsObject[Strings.getIncludedServices]!(service?.jsValue() ?? .undefined).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    public func getIncludedServices(service: BluetoothServiceUUID? = nil) async throws -> [BluetoothRemoteGATTService] {
        let _promise: JSPromise = jsObject[Strings.getIncludedServices]!(service?.jsValue() ?? .undefined).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }
}
