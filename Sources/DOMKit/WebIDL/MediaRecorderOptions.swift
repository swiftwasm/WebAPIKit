// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class MediaRecorderOptions: BridgedDictionary {
    public convenience init(mimeType: String, audioBitsPerSecond: UInt32, videoBitsPerSecond: UInt32, bitsPerSecond: UInt32, audioBitrateMode: BitrateMode) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.mimeType] = mimeType.jsValue
        object[Strings.audioBitsPerSecond] = audioBitsPerSecond.jsValue
        object[Strings.videoBitsPerSecond] = videoBitsPerSecond.jsValue
        object[Strings.bitsPerSecond] = bitsPerSecond.jsValue
        object[Strings.audioBitrateMode] = audioBitrateMode.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _mimeType = ReadWriteAttribute(jsObject: object, name: Strings.mimeType)
        _audioBitsPerSecond = ReadWriteAttribute(jsObject: object, name: Strings.audioBitsPerSecond)
        _videoBitsPerSecond = ReadWriteAttribute(jsObject: object, name: Strings.videoBitsPerSecond)
        _bitsPerSecond = ReadWriteAttribute(jsObject: object, name: Strings.bitsPerSecond)
        _audioBitrateMode = ReadWriteAttribute(jsObject: object, name: Strings.audioBitrateMode)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var mimeType: String

    @ReadWriteAttribute
    public var audioBitsPerSecond: UInt32

    @ReadWriteAttribute
    public var videoBitsPerSecond: UInt32

    @ReadWriteAttribute
    public var bitsPerSecond: UInt32

    @ReadWriteAttribute
    public var audioBitrateMode: BitrateMode
}
