// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_MessagePort_or_ServiceWorker_or_WindowProxy: ConvertibleToJSValue {}
extension MessagePort: Any_MessagePort_or_ServiceWorker_or_WindowProxy {}
extension ServiceWorker: Any_MessagePort_or_ServiceWorker_or_WindowProxy {}
extension WindowProxy: Any_MessagePort_or_ServiceWorker_or_WindowProxy {}

public enum MessagePort_or_ServiceWorker_or_WindowProxy: JSValueCompatible, Any_MessagePort_or_ServiceWorker_or_WindowProxy {
    case messagePort(MessagePort)
    case serviceWorker(ServiceWorker)
    case windowProxy(WindowProxy)

    public static func construct(from value: JSValue) -> Self? {
        if let messagePort: MessagePort = value.fromJSValue() {
            return .messagePort(messagePort)
        }
        if let serviceWorker: ServiceWorker = value.fromJSValue() {
            return .serviceWorker(serviceWorker)
        }
        if let windowProxy: WindowProxy = value.fromJSValue() {
            return .windowProxy(windowProxy)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .messagePort(messagePort):
            return messagePort.jsValue()
        case let .serviceWorker(serviceWorker):
            return serviceWorker.jsValue()
        case let .windowProxy(windowProxy):
            return windowProxy.jsValue()
        }
    }
}
