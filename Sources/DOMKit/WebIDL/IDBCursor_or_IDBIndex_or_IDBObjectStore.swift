// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_IDBCursor_or_IDBIndex_or_IDBObjectStore: ConvertibleToJSValue {}
extension IDBCursor: Any_IDBCursor_or_IDBIndex_or_IDBObjectStore {}
extension IDBIndex: Any_IDBCursor_or_IDBIndex_or_IDBObjectStore {}
extension IDBObjectStore: Any_IDBCursor_or_IDBIndex_or_IDBObjectStore {}

public enum IDBCursor_or_IDBIndex_or_IDBObjectStore: JSValueCompatible, Any_IDBCursor_or_IDBIndex_or_IDBObjectStore {
    case iDBCursor(IDBCursor)
    case iDBIndex(IDBIndex)
    case iDBObjectStore(IDBObjectStore)

    public static func construct(from value: JSValue) -> Self? {
        if let iDBCursor: IDBCursor = value.fromJSValue() {
            return .iDBCursor(iDBCursor)
        }
        if let iDBIndex: IDBIndex = value.fromJSValue() {
            return .iDBIndex(iDBIndex)
        }
        if let iDBObjectStore: IDBObjectStore = value.fromJSValue() {
            return .iDBObjectStore(iDBObjectStore)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .iDBCursor(iDBCursor):
            return iDBCursor.jsValue
        case let .iDBIndex(iDBIndex):
            return iDBIndex.jsValue
        case let .iDBObjectStore(iDBObjectStore):
            return iDBObjectStore.jsValue
        }
    }
}
