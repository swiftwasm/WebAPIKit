// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class ValidityStateFlags: JSObject {
    public init(valueMissing: Bool, typeMismatch: Bool, patternMismatch: Bool, tooLong: Bool, tooShort: Bool, rangeUnderflow: Bool, rangeOverflow: Bool, stepMismatch: Bool, badInput: Bool, customError: Bool) {
        let object = JSObject.global.Object.function!.new()
        object["valueMissing"] = valueMissing.jsValue()
        object["typeMismatch"] = typeMismatch.jsValue()
        object["patternMismatch"] = patternMismatch.jsValue()
        object["tooLong"] = tooLong.jsValue()
        object["tooShort"] = tooShort.jsValue()
        object["rangeUnderflow"] = rangeUnderflow.jsValue()
        object["rangeOverflow"] = rangeOverflow.jsValue()
        object["stepMismatch"] = stepMismatch.jsValue()
        object["badInput"] = badInput.jsValue()
        object["customError"] = customError.jsValue()
        _valueMissing = ReadWriteAttribute(jsObject: object, name: "valueMissing")
        _typeMismatch = ReadWriteAttribute(jsObject: object, name: "typeMismatch")
        _patternMismatch = ReadWriteAttribute(jsObject: object, name: "patternMismatch")
        _tooLong = ReadWriteAttribute(jsObject: object, name: "tooLong")
        _tooShort = ReadWriteAttribute(jsObject: object, name: "tooShort")
        _rangeUnderflow = ReadWriteAttribute(jsObject: object, name: "rangeUnderflow")
        _rangeOverflow = ReadWriteAttribute(jsObject: object, name: "rangeOverflow")
        _stepMismatch = ReadWriteAttribute(jsObject: object, name: "stepMismatch")
        _badInput = ReadWriteAttribute(jsObject: object, name: "badInput")
        _customError = ReadWriteAttribute(jsObject: object, name: "customError")
        super.init(cloning: object)
    }

    @ReadWriteAttribute
    public var valueMissing: Bool

    @ReadWriteAttribute
    public var typeMismatch: Bool

    @ReadWriteAttribute
    public var patternMismatch: Bool

    @ReadWriteAttribute
    public var tooLong: Bool

    @ReadWriteAttribute
    public var tooShort: Bool

    @ReadWriteAttribute
    public var rangeUnderflow: Bool

    @ReadWriteAttribute
    public var rangeOverflow: Bool

    @ReadWriteAttribute
    public var stepMismatch: Bool

    @ReadWriteAttribute
    public var badInput: Bool

    @ReadWriteAttribute
    public var customError: Bool
}
