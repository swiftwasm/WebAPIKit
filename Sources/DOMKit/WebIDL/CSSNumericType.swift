// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class CSSNumericType: BridgedDictionary {
    public convenience init(length: Int32, angle: Int32, time: Int32, frequency: Int32, resolution: Int32, flex: Int32, percent: Int32, percentHint: CSSNumericBaseType) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.length] = length.jsValue
        object[Strings.angle] = angle.jsValue
        object[Strings.time] = time.jsValue
        object[Strings.frequency] = frequency.jsValue
        object[Strings.resolution] = resolution.jsValue
        object[Strings.flex] = flex.jsValue
        object[Strings.percent] = percent.jsValue
        object[Strings.percentHint] = percentHint.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _length = ReadWriteAttribute(jsObject: object, name: Strings.length)
        _angle = ReadWriteAttribute(jsObject: object, name: Strings.angle)
        _time = ReadWriteAttribute(jsObject: object, name: Strings.time)
        _frequency = ReadWriteAttribute(jsObject: object, name: Strings.frequency)
        _resolution = ReadWriteAttribute(jsObject: object, name: Strings.resolution)
        _flex = ReadWriteAttribute(jsObject: object, name: Strings.flex)
        _percent = ReadWriteAttribute(jsObject: object, name: Strings.percent)
        _percentHint = ReadWriteAttribute(jsObject: object, name: Strings.percentHint)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var length: Int32

    @ReadWriteAttribute
    public var angle: Int32

    @ReadWriteAttribute
    public var time: Int32

    @ReadWriteAttribute
    public var frequency: Int32

    @ReadWriteAttribute
    public var resolution: Int32

    @ReadWriteAttribute
    public var flex: Int32

    @ReadWriteAttribute
    public var percent: Int32

    @ReadWriteAttribute
    public var percentHint: CSSNumericBaseType
}
