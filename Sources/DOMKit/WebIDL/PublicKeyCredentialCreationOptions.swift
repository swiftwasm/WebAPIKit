// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class PublicKeyCredentialCreationOptions: BridgedDictionary {
    public convenience init(rp: PublicKeyCredentialRpEntity, user: PublicKeyCredentialUserEntity, challenge: BufferSource, pubKeyCredParams: [PublicKeyCredentialParameters], timeout: UInt32, excludeCredentials: [PublicKeyCredentialDescriptor], authenticatorSelection: AuthenticatorSelectionCriteria, attestation: String, extensions: AuthenticationExtensionsClientInputs) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.rp] = rp.jsValue()
        object[Strings.user] = user.jsValue()
        object[Strings.challenge] = challenge.jsValue()
        object[Strings.pubKeyCredParams] = pubKeyCredParams.jsValue()
        object[Strings.timeout] = timeout.jsValue()
        object[Strings.excludeCredentials] = excludeCredentials.jsValue()
        object[Strings.authenticatorSelection] = authenticatorSelection.jsValue()
        object[Strings.attestation] = attestation.jsValue()
        object[Strings.extensions] = extensions.jsValue()
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _rp = ReadWriteAttribute(jsObject: object, name: Strings.rp)
        _user = ReadWriteAttribute(jsObject: object, name: Strings.user)
        _challenge = ReadWriteAttribute(jsObject: object, name: Strings.challenge)
        _pubKeyCredParams = ReadWriteAttribute(jsObject: object, name: Strings.pubKeyCredParams)
        _timeout = ReadWriteAttribute(jsObject: object, name: Strings.timeout)
        _excludeCredentials = ReadWriteAttribute(jsObject: object, name: Strings.excludeCredentials)
        _authenticatorSelection = ReadWriteAttribute(jsObject: object, name: Strings.authenticatorSelection)
        _attestation = ReadWriteAttribute(jsObject: object, name: Strings.attestation)
        _extensions = ReadWriteAttribute(jsObject: object, name: Strings.extensions)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var rp: PublicKeyCredentialRpEntity

    @ReadWriteAttribute
    public var user: PublicKeyCredentialUserEntity

    @ReadWriteAttribute
    public var challenge: BufferSource

    @ReadWriteAttribute
    public var pubKeyCredParams: [PublicKeyCredentialParameters]

    @ReadWriteAttribute
    public var timeout: UInt32

    @ReadWriteAttribute
    public var excludeCredentials: [PublicKeyCredentialDescriptor]

    @ReadWriteAttribute
    public var authenticatorSelection: AuthenticatorSelectionCriteria

    @ReadWriteAttribute
    public var attestation: String

    @ReadWriteAttribute
    public var extensions: AuthenticationExtensionsClientInputs
}
