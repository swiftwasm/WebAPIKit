// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class TextTrack: EventTarget {
    override public class var constructor: JSFunction { JSObject.global.TextTrack.function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _kind = ReadonlyAttribute(jsObject: jsObject, name: "kind")
        _label = ReadonlyAttribute(jsObject: jsObject, name: "label")
        _language = ReadonlyAttribute(jsObject: jsObject, name: "language")
        _id = ReadonlyAttribute(jsObject: jsObject, name: "id")
        _inBandMetadataTrackDispatchType = ReadonlyAttribute(jsObject: jsObject, name: "inBandMetadataTrackDispatchType")
        _mode = ReadWriteAttribute(jsObject: jsObject, name: "mode")
        _cues = ReadonlyAttribute(jsObject: jsObject, name: "cues")
        _activeCues = ReadonlyAttribute(jsObject: jsObject, name: "activeCues")
        _oncuechange = ClosureAttribute.Optional1(jsObject: jsObject, name: "oncuechange")
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadonlyAttribute
    public var kind: TextTrackKind

    @ReadonlyAttribute
    public var label: String

    @ReadonlyAttribute
    public var language: String

    @ReadonlyAttribute
    public var id: String

    @ReadonlyAttribute
    public var inBandMetadataTrackDispatchType: String

    @ReadWriteAttribute
    public var mode: TextTrackMode

    @ReadonlyAttribute
    public var cues: TextTrackCueList?

    @ReadonlyAttribute
    public var activeCues: TextTrackCueList?

    public func addCue(cue: TextTrackCue) {
        _ = jsObject["addCue"]!(cue.jsValue())
    }

    public func removeCue(cue: TextTrackCue) {
        _ = jsObject["removeCue"]!(cue.jsValue())
    }

    @ClosureAttribute.Optional1
    public var oncuechange: EventHandler
}
