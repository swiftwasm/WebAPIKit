// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class RTCRtpEncodingParameters: BridgedDictionary {
    public convenience init(priority: RTCPriorityType, networkPriority: RTCPriorityType, scalabilityMode: String, active: Bool, maxBitrate: UInt32, scaleResolutionDownBy: Double) {
        let object = JSObject.global[Strings.Object].function!.new()
        object[Strings.priority] = priority.jsValue
        object[Strings.networkPriority] = networkPriority.jsValue
        object[Strings.scalabilityMode] = scalabilityMode.jsValue
        object[Strings.active] = active.jsValue
        object[Strings.maxBitrate] = maxBitrate.jsValue
        object[Strings.scaleResolutionDownBy] = scaleResolutionDownBy.jsValue
        self.init(unsafelyWrapping: object)
    }

    public required init(unsafelyWrapping object: JSObject) {
        _priority = ReadWriteAttribute(jsObject: object, name: Strings.priority)
        _networkPriority = ReadWriteAttribute(jsObject: object, name: Strings.networkPriority)
        _scalabilityMode = ReadWriteAttribute(jsObject: object, name: Strings.scalabilityMode)
        _active = ReadWriteAttribute(jsObject: object, name: Strings.active)
        _maxBitrate = ReadWriteAttribute(jsObject: object, name: Strings.maxBitrate)
        _scaleResolutionDownBy = ReadWriteAttribute(jsObject: object, name: Strings.scaleResolutionDownBy)
        super.init(unsafelyWrapping: object)
    }

    @ReadWriteAttribute
    public var priority: RTCPriorityType

    @ReadWriteAttribute
    public var networkPriority: RTCPriorityType

    @ReadWriteAttribute
    public var scalabilityMode: String

    @ReadWriteAttribute
    public var active: Bool

    @ReadWriteAttribute
    public var maxBitrate: UInt32

    @ReadWriteAttribute
    public var scaleResolutionDownBy: Double
}
