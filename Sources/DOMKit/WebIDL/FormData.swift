// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class FormData: JSBridgedClass, Sequence {
    public class var constructor: JSFunction { JSObject.global.FormData.function! }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        self.jsObject = jsObject
    }

    public convenience init(form: HTMLFormElement? = nil) {
        self.init(unsafelyWrapping: Self.constructor.new(form?.jsValue() ?? .undefined))
    }

    public func append(name: String, value: String) {
        _ = jsObject["append"]!(name.jsValue(), value.jsValue())
    }

    public func append(name: String, blobValue: Blob, filename: String? = nil) {
        _ = jsObject["append"]!(name.jsValue(), blobValue.jsValue(), filename?.jsValue() ?? .undefined)
    }

    public func delete(name: String) {
        _ = jsObject["delete"]!(name.jsValue())
    }

    public func get(name: String) -> FormDataEntryValue? {
        jsObject["get"]!(name.jsValue()).fromJSValue()!
    }

    public func getAll(name: String) -> [FormDataEntryValue] {
        jsObject["getAll"]!(name.jsValue()).fromJSValue()!
    }

    public func has(name: String) -> Bool {
        jsObject["has"]!(name.jsValue()).fromJSValue()!
    }

    public func set(name: String, value: String) {
        _ = jsObject["set"]!(name.jsValue(), value.jsValue())
    }

    public func set(name: String, blobValue: Blob, filename: String? = nil) {
        _ = jsObject["set"]!(name.jsValue(), blobValue.jsValue(), filename?.jsValue() ?? .undefined)
    }

    public typealias Element = String
    public func makeIterator() -> ValueIterableIterator<FormData> {
        ValueIterableIterator(sequence: self)
    }
}
