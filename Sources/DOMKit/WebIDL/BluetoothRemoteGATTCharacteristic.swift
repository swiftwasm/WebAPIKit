// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class BluetoothRemoteGATTCharacteristic: EventTarget, CharacteristicEventHandlers {
    @inlinable override public class var constructor: JSFunction { JSObject.global[Strings.BluetoothRemoteGATTCharacteristic].function! }

    public required init(unsafelyWrapping jsObject: JSObject) {
        _service = ReadonlyAttribute(jsObject: jsObject, name: Strings.service)
        _uuid = ReadonlyAttribute(jsObject: jsObject, name: Strings.uuid)
        _properties = ReadonlyAttribute(jsObject: jsObject, name: Strings.properties)
        _value = ReadonlyAttribute(jsObject: jsObject, name: Strings.value)
        super.init(unsafelyWrapping: jsObject)
    }

    @ReadonlyAttribute
    public var service: BluetoothRemoteGATTService

    @ReadonlyAttribute
    public var uuid: UUID

    @ReadonlyAttribute
    public var properties: BluetoothCharacteristicProperties

    @ReadonlyAttribute
    public var value: DataView?

    @inlinable public func getDescriptor(descriptor: BluetoothDescriptorUUID) -> JSPromise {
        let this = jsObject
        return this[Strings.getDescriptor].function!(this: this, arguments: [descriptor.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func getDescriptor(descriptor: BluetoothDescriptorUUID) async throws -> BluetoothRemoteGATTDescriptor {
        let this = jsObject
        let _promise: JSPromise = this[Strings.getDescriptor].function!(this: this, arguments: [descriptor.jsValue()]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func getDescriptors(descriptor: BluetoothDescriptorUUID? = nil) -> JSPromise {
        let this = jsObject
        return this[Strings.getDescriptors].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func getDescriptors(descriptor: BluetoothDescriptorUUID? = nil) async throws -> [BluetoothRemoteGATTDescriptor] {
        let this = jsObject
        let _promise: JSPromise = this[Strings.getDescriptors].function!(this: this, arguments: [descriptor?.jsValue() ?? .undefined]).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func readValue() -> JSPromise {
        let this = jsObject
        return this[Strings.readValue].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func readValue() async throws -> DataView {
        let this = jsObject
        let _promise: JSPromise = this[Strings.readValue].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func writeValue(value: BufferSource) -> JSPromise {
        let this = jsObject
        return this[Strings.writeValue].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func writeValue(value: BufferSource) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.writeValue].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
        _ = try await _promise.get()
    }

    @inlinable public func writeValueWithResponse(value: BufferSource) -> JSPromise {
        let this = jsObject
        return this[Strings.writeValueWithResponse].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func writeValueWithResponse(value: BufferSource) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.writeValueWithResponse].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
        _ = try await _promise.get()
    }

    @inlinable public func writeValueWithoutResponse(value: BufferSource) -> JSPromise {
        let this = jsObject
        return this[Strings.writeValueWithoutResponse].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func writeValueWithoutResponse(value: BufferSource) async throws {
        let this = jsObject
        let _promise: JSPromise = this[Strings.writeValueWithoutResponse].function!(this: this, arguments: [value.jsValue()]).fromJSValue()!
        _ = try await _promise.get()
    }

    @inlinable public func startNotifications() -> JSPromise {
        let this = jsObject
        return this[Strings.startNotifications].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func startNotifications() async throws -> BluetoothRemoteGATTCharacteristic {
        let this = jsObject
        let _promise: JSPromise = this[Strings.startNotifications].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }

    @inlinable public func stopNotifications() -> JSPromise {
        let this = jsObject
        return this[Strings.stopNotifications].function!(this: this, arguments: []).fromJSValue()!
    }

    @available(macOS 10.15, iOS 13.0, watchOS 6.0, tvOS 13.0, *)
    @inlinable public func stopNotifications() async throws -> BluetoothRemoteGATTCharacteristic {
        let this = jsObject
        let _promise: JSPromise = this[Strings.stopNotifications].function!(this: this, arguments: []).fromJSValue()!
        return try await _promise.get().fromJSValue()!
    }
}
