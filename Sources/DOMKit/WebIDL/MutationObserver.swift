// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public class MutationObserver: JSBridgedClass {
    public class var constructor: JSFunction { JSObject.global.MutationObserver.function! }

    private enum Keys {
        static let disconnect: JSString = "disconnect"
        static let observe: JSString = "observe"
        static let takeRecords: JSString = "takeRecords"
    }

    public let jsObject: JSObject

    public required init(unsafelyWrapping jsObject: JSObject) {
        self.jsObject = jsObject
    }

    public convenience init(callback: MutationCallback) {
        self.init(unsafelyWrapping: Self.constructor.new(callback.jsValue()))
    }

    public func observe(target: Node, options: MutationObserverInit? = nil) {
        jsObject[Keys.observe]!(target.jsValue(), options?.jsValue() ?? .undefined).fromJSValue()!
    }

    public func disconnect() {
        jsObject[Keys.disconnect]!().fromJSValue()!
    }

    public func takeRecords() -> [MutationRecord] {
        jsObject[Keys.takeRecords]!().fromJSValue()!
    }
}
