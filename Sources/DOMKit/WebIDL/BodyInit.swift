// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_BodyInit: ConvertibleToJSValue {}
extension ReadableStream: Any_BodyInit {}
extension XMLHttpRequestBodyInit: Any_BodyInit {}

public enum BodyInit: JSValueCompatible, Any_BodyInit {
    case readableStream(ReadableStream)
    case xmlHttpRequestBodyInit(XMLHttpRequestBodyInit)

    var readableStream: ReadableStream? {
        switch self {
        case let .readableStream(readableStream): return readableStream
        default: return nil
        }
    }

    var xmlHttpRequestBodyInit: XMLHttpRequestBodyInit? {
        switch self {
        case let .xmlHttpRequestBodyInit(xmlHttpRequestBodyInit): return xmlHttpRequestBodyInit
        default: return nil
        }
    }

    public static func construct(from value: JSValue) -> Self? {
        if let readableStream: ReadableStream = value.fromJSValue() {
            return .readableStream(readableStream)
        }
        if let xmlHttpRequestBodyInit: XMLHttpRequestBodyInit = value.fromJSValue() {
            return .xmlHttpRequestBodyInit(xmlHttpRequestBodyInit)
        }
        return nil
    }

    public var jsValue: JSValue {
        switch self {
        case let .readableStream(readableStream):
            return readableStream.jsValue
        case let .xmlHttpRequestBodyInit(xmlHttpRequestBodyInit):
            return xmlHttpRequestBodyInit.jsValue
        }
    }
}
