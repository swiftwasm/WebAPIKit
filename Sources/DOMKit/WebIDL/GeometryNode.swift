// This file was auto-generated by WebIDLToSwift. DO NOT EDIT!

import JavaScriptEventLoop
import JavaScriptKit

public protocol Any_GeometryNode: ConvertibleToJSValue {}
extension CSSPseudoElement: Any_GeometryNode {}
extension Document: Any_GeometryNode {}
extension Element: Any_GeometryNode {}
extension Text: Any_GeometryNode {}

public enum GeometryNode: JSValueCompatible, Any_GeometryNode {
    case cSSPseudoElement(CSSPseudoElement)
    case document(Document)
    case element(Element)
    case text(Text)

    public static func construct(from value: JSValue) -> Self? {
        if let cSSPseudoElement: CSSPseudoElement = value.fromJSValue() {
            return .cSSPseudoElement(cSSPseudoElement)
        }
        if let document: Document = value.fromJSValue() {
            return .document(document)
        }
        if let element: Element = value.fromJSValue() {
            return .element(element)
        }
        if let text: Text = value.fromJSValue() {
            return .text(text)
        }
        return nil
    }

    public func jsValue() -> JSValue {
        switch self {
        case let .cSSPseudoElement(cSSPseudoElement):
            return cSSPseudoElement.jsValue()
        case let .document(document):
            return document.jsValue()
        case let .element(element):
            return element.jsValue()
        case let .text(text):
            return text.jsValue()
        }
    }
}
